SELECT a.COB_DATE, a.CCC_TAPS_COMPANY, a.CCC_BUSINESS_AREA, a.CCC_PRODUCT_LINE, a.VERTICAL_SYSTEM, a.BOOK, a.ACCOUNT, CASE WHEN ((CCC_STRATEGY = 'HELD FOR INVESTMENT - (HFI)' OR CCC_DIVISION = 'HELD FOR INVESTMENT - (HFI)' ) OR (CCC_STRATEGY = 'HELD FOR SALE - (HFS)' OR BOOK = 'CCISW' OR CCC_DIVISION = 'HELD FOR SALE - (HFS)') OR BOOK IN ('PLAFL', 'PLAPV') OR BOOK LIKE 'WM_LAL%' OR (CCC_STRATEGY = 'TAILORED LENDING NJV (S)' OR CCC_PRODUCT_LINE = 'TAILORED LENDING NJV (S)' ) OR A.WM_BANKING_PRODUCT_GROUP = 'Bank Lending') THEN 'Bank Lending' when account in ('070008AG2', '0700089Z2', '0700ERR44','070008AG2', '0700089Z2') or book in ('RPOHJ', 'RPOHC') or a.WM_BANKING_PRODUCT_GROUP IN ('Liquidity') Then 'Liquidity' WHEN BOOK IN ('DPSWA', 'DPTSW', 'IPBSW', 'IPTSW', 'PLSWA', 'RPOFO','RPOHA', 'RPOHD', 'RPOHK', 'RPOHM', 'RPOHO', 'TL2SW','RPOHE', 'RPOHB', 'RPOHF', 'RPOHG', 'RPOHH') THEN 'INTERNAL TRANSFER TRADES' ELSE a.WM_BANKING_PRODUCT_GROUP END AS WM_BANKING_PRODUCT_GROUP, CASE WHEN BOOK IN ('VNCDB', 'VNCDP', 'BCDUT') THEN 'Brokered CD - GCM' WHEN BOOK IN ('PBCDP', 'PBCDB') THEN 'Brokered CD - PBG' WHEN (CCC_STRATEGY = 'HELD FOR INVESTMENT - (HFI)' OR CCC_DIVISION = 'HELD FOR INVESTMENT - (HFI)' )THEN 'Mortgages (HFI)' WHEN (CCC_STRATEGY = 'HELD FOR SALE - (HFS)' OR BOOK = 'CCISW' OR CCC_DIVISION = 'HELD FOR SALE - (HFS)' ) THEN 'Mortgages (HFS)' WHEN BOOK IN ('PLAFL', 'PLAPV')THEN 'PLA' WHEN BOOK LIKE 'WM_LAL%' THEN 'LAL' WHEN (CCC_STRATEGY = 'TAILORED LENDING NJV (S)' OR CCC_PRODUCT_LINE = 'TAILORED LENDING NJV (S)' )THEN 'Tailored Lending' when account in ('070008AG2', '0700089Z2', '0700ERR44','070008AG2', '0700089Z2') or book in ('RPOHJ', 'RPOHC') then 'Repo' WHEN BOOK IN ('DPSWA', 'DPTSW', 'IPBSW', 'IPTSW', 'PLSWA', 'RPOFO','RPOHA', 'RPOHD', 'RPOHK', 'RPOHM', 'RPOHO', 'TL2SW','RPOHE', 'RPOHB', 'RPOHF', 'RPOHG', 'RPOHH') THEN 'INTERNAL TRANSFER TRADES' ELSE a.WM_BANKING_PRODUCT_SUB_GROUP END AS WM_BANKING_PRODUCT_SUB_GROUP, a.PRODUCT_SUB_TYPE_CODE, CASE WHEN PRODUCT_TYPE_CODE = 'DEPOSIT' THEN (CASE WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-A', 'Tier-6','Tier-A-BAU', 'Tier-6-BAU') THEN 'Tier-A' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-B-BAU', 'Tier-5-BAU','Tier-B', 'Tier-5') THEN 'Tier-B' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-C-BAU', 'Tier-4-BAU','Tier-C', 'Tier-4') THEN 'Tier-C' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-D-BAU', 'Tier-3-BAU','Tier-D', 'Tier-3') THEN 'Tier-D' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-8-BAU','Tier-7-BAU', 'Tier-E-BAU','Tier-8','Tier-7', 'Tier-E') THEN 'Tier-E' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-F-BAU', 'Tier-1-BAU','Tier-F', 'Tier-1') THEN 'Tier-F' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-66-BAU','Tier-66') THEN 'Mgd-A' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-65-BAU','Tier-65') THEN 'Mgd-B' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-64','Tier-64-BAU') THEN 'Mgd-C' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-63','Tier-63-BAU') THEN 'Mgd-D' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-67', 'Tier-52', 'Tier-G','Tier-67-BAU', 'Tier-52-BAU', 'Tier-G-BAU') THEN 'Mgd-E' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-61', 'Tier-51', 'Tier-J','Tier-61-BAU', 'Tier-51-BAU', 'Tier-J-BAU') THEN 'Mgd-F' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-H', 'Tier-914','Tier-H-BAU', 'Tier-914-BAU') THEN 'Tier-H' ELSE 'OTHER' END) ELSE 'n/a' END AS TIER, a.PRODUCT_TYPE_NAME, SUM (USD_TOTAL_COMMIT) AS USD_TOTAL_COMMIT, SUM (USD_UNFUNDED_COMMIT) AS USD_UNFUNDED_COMMIT, SUM (USD_NOTIONAL) AS USD_NOTIONAL, SUM (USD_EXPOSURE) AS USD_EXPOSURE, SUM (MV) AS MV, SUM (USD_PV01SPRD) AS USD_PV01SPRD, SUM (USD_PV01) AS USD_PV01, SUM (USD_IR_KAPPA) AS USD_IR_KAPPA, SUM (USD_CONVX) AS USD_CONVX, SUM (CASE WHEN a.WM_BANKING_PRODUCT_SUB_GROUP = 'Swaption' THEN COALESCE (SLIDE_IR_MIN_100BP_USD, 0) ELSE COALESCE (SLIDE_IR_MIN_100BP_USD, USD_PV01 * - 100) END) AS SLIDE_IR_MIN_100BP_USD, SUM (CASE WHEN a.WM_BANKING_PRODUCT_SUB_GROUP = 'Swaption' THEN COALESCE (SLIDE_IR_MIN_200BP_USD, 0) ELSE COALESCE (SLIDE_IR_MIN_200BP_USD, USD_PV01 * - 200) END) AS SLIDE_IR_MIN_200BP_USD, SUM (CASE WHEN a.WM_BANKING_PRODUCT_SUB_GROUP = 'Swaption' THEN COALESCE (SLIDE_IR_MIN_300BP_USD, 0) ELSE COALESCE (SLIDE_IR_MIN_300BP_USD, USD_PV01 * - 300) END) AS SLIDE_IR_MIN_300BP_USD, SUM (CASE WHEN a.WM_BANKING_PRODUCT_SUB_GROUP = 'Swaption' THEN COALESCE (SLIDE_IR_MIN_50BP_USD, 0) ELSE COALESCE (SLIDE_IR_MIN_50BP_USD, USD_PV01 * - 50) END) AS SLIDE_IR_MIN_50BP_USD, SUM (CASE WHEN a.WM_BANKING_PRODUCT_SUB_GROUP = 'Swaption' THEN COALESCE (SLIDE_IR_PLS_50BP_USD, 0) ELSE COALESCE (SLIDE_IR_PLS_50BP_USD, USD_PV01 * 50) END) AS SLIDE_IR_PLS_50BP_USD, SUM (CASE WHEN a.WM_BANKING_PRODUCT_SUB_GROUP = 'Swaption' THEN COALESCE (SLIDE_IR_PLS_100BP_USD, 0) ELSE COALESCE (SLIDE_IR_PLS_100BP_USD, USD_PV01 * 100) END) AS SLIDE_IR_PLS_100BP_USD, SUM (CASE WHEN a.WM_BANKING_PRODUCT_SUB_GROUP = 'Swaption' THEN COALESCE (SLIDE_IR_PLS_200BP_USD, 0) ELSE COALESCE (SLIDE_IR_PLS_200BP_USD, USD_PV01 * 200) END) AS SLIDE_IR_PLS_200BP_USD, SUM (CASE WHEN a.WM_BANKING_PRODUCT_SUB_GROUP = 'Swaption' THEN COALESCE (SLIDE_IR_PLS_300BP_USD, 0) ELSE COALESCE (SLIDE_IR_PLS_300BP_USD, USD_PV01 * 300) END) AS SLIDE_IR_PLS_300BP_USD FROM ( SELECT a.POSITION_ID, a.COB_DATE, a.CCC_TAPS_COMPANY, a.CCC_BUSINESS_AREA, a.CCC_DIVISION, a.CCC_STRATEGY, a.CCC_PRODUCT_LINE, a.VERTICAL_SYSTEM, a.BOOK, a.ACCOUNT, a.PRODUCT_TYPE_CODE, a.WM_BANKING_PRODUCT_GROUP, a.WM_BANKING_PRODUCT_SUB_GROUP, a.BANKING_PRODUCT_DESCRIPTION, a.PRODUCT_SUB_TYPE_CODE, a.PRODUCT_TYPE_NAME, SUM (COALESCE (((USD_TOTAL_COMMIT) :: numeric(15,5)), 0)) / 1000 AS USD_TOTAL_COMMIT, SUM (COALESCE (((USD_UNFUNDED_COMMIT) :: numeric(15,5)), 0)) / 1000 AS USD_UNFUNDED_COMMIT, SUM (COALESCE (((USD_NOTIONAL) :: numeric(15,5)), 0)) / 1000 AS USD_NOTIONAL, SUM (COALESCE (((USD_EXPOSURE) :: numeric(15,5)), 0)) / 1000 AS USD_EXPOSURE, SUM (COALESCE (((USD_PROCEED) :: numeric(15,5)), 0)) / 1000 AS MV, SUM (COALESCE (((USD_PV01SPRD) :: numeric(15,5)), 0)) / 1000 AS USD_PV01SPRD, SUM (COALESCE (((USD_IR_KAPPA) :: numeric(15,5)), 0) / 10) AS USD_IR_KAPPA, SUM (COALESCE (((USD_CONVX) :: numeric(15,5)), 0) / 1000) AS USD_CONVX, SUM (COALESCE (((USD_IR_UNIFIED_PV01) :: numeric(15,5)), 0)) AS USD_PV01, SUM ((a.SLIDE_IR_PLS_100BP_USD) :: numeric(15,5)) AS SLIDE_IR_PLS_100BP_USD, SUM ((a.SLIDE_IR_PLS_200BP_USD) :: numeric(15,5)) AS SLIDE_IR_PLS_200BP_USD, SUM ((a.SLIDE_IR_PLS_300BP_USD) :: numeric(15,5)) AS SLIDE_IR_PLS_300BP_USD, SUM ((a.SLIDE_IR_PLS_50BP_USD) :: numeric(15,5)) AS SLIDE_IR_PLS_50BP_USD, SUM ((a.SLIDE_IR_MIN_50BP_USD) :: numeric(15,5)) AS SLIDE_IR_MIN_50BP_USD, SUM ((a.SLIDE_IR_MIN_100BP_USD) :: numeric(15,5)) AS SLIDE_IR_MIN_100BP_USD, SUM ((a.SLIDE_IR_MIN_200BP_USD) :: numeric(15,5)) AS SLIDE_IR_MIN_200BP_USD, SUM ((a.SLIDE_IR_MIN_300BP_USD) :: numeric(15,5)) AS SLIDE_IR_MIN_300BP_USD FROM cdwuser.u_dm_wm_position a WHERE A.COB_DATE IN ( '2017-07-31', '2017-06-30', '2017-05-31', '2015-12-31' ) AND (A.VAR_EXCL_FL <> 'Y' OR A.BOOK IN ('MSDPB3M', 'MSDPT3M')) AND (A.CCC_HIERARCHY_LEVEL2 IN ('WEALTH MANAGEMENT', 'GLOBAL WEALTH MANAGEMENT') OR a.WM_BANKING_PRODUCT_SUB_GROUP IN ('Cash')) GROUP BY a.POSITION_ID, a.COB_DATE, a.CCC_TAPS_COMPANY, a.CCC_BUSINESS_AREA, a.CCC_DIVISION, a.CCC_STRATEGY, a.CCC_PRODUCT_LINE, a.VERTICAL_SYSTEM, a.BOOK, a.ACCOUNT, a.PRODUCT_TYPE_CODE, a.PRODUCT_SUB_TYPE_CODE, a.WM_BANKING_PRODUCT_GROUP, a.WM_BANKING_PRODUCT_SUB_GROUP, a.BANKING_PRODUCT_DESCRIPTION, a.PRODUCT_TYPE_NAME ) A GROUP BY a.COB_DATE, a.CCC_TAPS_COMPANY, a.CCC_BUSINESS_AREA, a.CCC_PRODUCT_LINE, a.VERTICAL_SYSTEM, a.BOOK, a.ACCOUNT, CASE WHEN ((CCC_STRATEGY = 'HELD FOR INVESTMENT - (HFI)' OR CCC_DIVISION = 'HELD FOR INVESTMENT - (HFI)' ) OR (CCC_STRATEGY = 'HELD FOR SALE - (HFS)' OR BOOK = 'CCISW' OR CCC_DIVISION = 'HELD FOR SALE - (HFS)') OR BOOK IN ('PLAFL', 'PLAPV') OR BOOK LIKE 'WM_LAL%' OR (CCC_STRATEGY = 'TAILORED LENDING NJV (S)' OR CCC_PRODUCT_LINE = 'TAILORED LENDING NJV (S)' ) OR A.WM_BANKING_PRODUCT_GROUP = 'Bank Lending') THEN 'Bank Lending' when account in ('070008AG2', '0700089Z2', '0700ERR44','070008AG2', '0700089Z2') or book in ('RPOHJ', 'RPOHC') or a.WM_BANKING_PRODUCT_GROUP IN ('Liquidity') Then 'Liquidity' WHEN BOOK IN ('DPSWA', 'DPTSW', 'IPBSW', 'IPTSW', 'PLSWA', 'RPOFO','RPOHA', 'RPOHD', 'RPOHK', 'RPOHM', 'RPOHO', 'TL2SW','RPOHE', 'RPOHB', 'RPOHF', 'RPOHG', 'RPOHH') THEN 'INTERNAL TRANSFER TRADES' ELSE a.WM_BANKING_PRODUCT_GROUP END, CASE WHEN BOOK IN ('VNCDB', 'VNCDP', 'BCDUT') THEN 'Brokered CD - GCM' WHEN BOOK IN ('PBCDP', 'PBCDB') THEN 'Brokered CD - PBG' WHEN (CCC_STRATEGY = 'HELD FOR INVESTMENT - (HFI)' OR CCC_DIVISION = 'HELD FOR INVESTMENT - (HFI)' )THEN 'Mortgages (HFI)' WHEN (CCC_STRATEGY = 'HELD FOR SALE - (HFS)' OR BOOK = 'CCISW' OR CCC_DIVISION = 'HELD FOR SALE - (HFS)' ) THEN 'Mortgages (HFS)' WHEN BOOK IN ('PLAFL', 'PLAPV')THEN 'PLA' WHEN BOOK LIKE 'WM_LAL%' THEN 'LAL' WHEN (CCC_STRATEGY = 'TAILORED LENDING NJV (S)' OR CCC_PRODUCT_LINE = 'TAILORED LENDING NJV (S)' )THEN 'Tailored Lending' when account in ('070008AG2', '0700089Z2', '0700ERR44','070008AG2', '0700089Z2') or book in ('RPOHJ', 'RPOHC') then 'Repo' WHEN BOOK IN ('DPSWA', 'DPTSW', 'IPBSW', 'IPTSW', 'PLSWA', 'RPOFO','RPOHA', 'RPOHD', 'RPOHK', 'RPOHM', 'RPOHO', 'TL2SW','RPOHE', 'RPOHB', 'RPOHF', 'RPOHG', 'RPOHH') THEN 'INTERNAL TRANSFER TRADES' ELSE a.WM_BANKING_PRODUCT_SUB_GROUP END, a.PRODUCT_TYPE_NAME, a.PRODUCT_SUB_TYPE_CODE, CASE WHEN PRODUCT_TYPE_CODE = 'DEPOSIT' THEN (CASE WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-A', 'Tier-6','Tier-A-BAU', 'Tier-6-BAU') THEN 'Tier-A' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-B-BAU', 'Tier-5-BAU','Tier-B', 'Tier-5') THEN 'Tier-B' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-C-BAU', 'Tier-4-BAU','Tier-C', 'Tier-4') THEN 'Tier-C' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-D-BAU', 'Tier-3-BAU','Tier-D', 'Tier-3') THEN 'Tier-D' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-8-BAU','Tier-7-BAU', 'Tier-E-BAU','Tier-8','Tier-7', 'Tier-E') THEN 'Tier-E' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-F-BAU', 'Tier-1-BAU','Tier-F', 'Tier-1') THEN 'Tier-F' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-66-BAU','Tier-66') THEN 'Mgd-A' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-65-BAU','Tier-65') THEN 'Mgd-B' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-64','Tier-64-BAU') THEN 'Mgd-C' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-63','Tier-63-BAU') THEN 'Mgd-D' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-67', 'Tier-52', 'Tier-G','Tier-67-BAU', 'Tier-52-BAU', 'Tier-G-BAU') THEN 'Mgd-E' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-61', 'Tier-51', 'Tier-J','Tier-61-BAU', 'Tier-51-BAU', 'Tier-J-BAU') THEN 'Mgd-F' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-H', 'Tier-914','Tier-H-BAU', 'Tier-914-BAU') THEN 'Tier-H' ELSE 'OTHER' END) ELSE 'n/a' END UNION ALL SELECT a.COB_DATE, a.CCC_TAPS_COMPANY, a.CCC_BUSINESS_AREA, a.CCC_PRODUCT_LINE, a.VERTICAL_SYSTEM, a.BOOK, a.ACCOUNT, a.WM_BANKING_PRODUCT_GROUP, a.WM_BANKING_PRODUCT_SUB_GROUP, a.PRODUCT_SUB_TYPE_CODE, CASE WHEN PRODUCT_TYPE_CODE = 'DEPOSIT' THEN (CASE WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-A', 'Tier-6','Tier-A-BAU', 'Tier-6-BAU') THEN 'Tier-A' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-B-BAU', 'Tier-5-BAU','Tier-B', 'Tier-5') THEN 'Tier-B' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-C-BAU', 'Tier-4-BAU','Tier-C', 'Tier-4') THEN 'Tier-C' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-D-BAU', 'Tier-3-BAU','Tier-D', 'Tier-3') THEN 'Tier-D' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-8-BAU','Tier-7-BAU', 'Tier-E-BAU','Tier-8','Tier-7', 'Tier-E') THEN 'Tier-E' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-F-BAU', 'Tier-1-BAU','Tier-F', 'Tier-1') THEN 'Tier-F' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-66-BAU','Tier-66') THEN 'Mgd-A' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-65-BAU','Tier-65') THEN 'Mgd-B' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-64','Tier-64-BAU') THEN 'Mgd-C' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-63','Tier-63-BAU') THEN 'Mgd-D' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-67', 'Tier-52', 'Tier-G','Tier-67-BAU', 'Tier-52-BAU', 'Tier-G-BAU') THEN 'Mgd-E' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-61', 'Tier-51', 'Tier-J','Tier-61-BAU', 'Tier-51-BAU', 'Tier-J-BAU') THEN 'Mgd-F' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-H', 'Tier-914','Tier-H-BAU', 'Tier-914-BAU') THEN 'Tier-H' ELSE 'OTHER' END) ELSE 'n/a' END AS TIER, a.PRODUCT_TYPE_NAME, SUM (USD_TOTAL_COMMIT) AS USD_TOTAL_COMMIT, SUM (USD_UNFUNDED_COMMIT) AS USD_UNFUNDED_COMMIT, SUM (USD_NOTIONAL) AS USD_NOTIONAL, SUM (USD_EXPOSURE) AS USD_EXPOSURE, SUM (MV) AS MV, SUM (USD_PV01SPRD) AS USD_PV01SPRD, SUM (USD_PV01) AS USD_PV01, SUM (USD_IR_KAPPA) AS USD_IR_KAPPA, SUM (USD_CONVX) AS USD_CONVX, SUM (CASE WHEN a.WM_BANKING_PRODUCT_SUB_GROUP = 'Swaption' THEN COALESCE (SLIDE_IR_MIN_100BP_USD, 0) ELSE COALESCE (SLIDE_IR_MIN_100BP_USD, USD_PV01 * - 100) END) AS SLIDE_IR_MIN_100BP_USD, SUM (CASE WHEN a.WM_BANKING_PRODUCT_SUB_GROUP = 'Swaption' THEN COALESCE (SLIDE_IR_MIN_200BP_USD, 0) ELSE COALESCE (SLIDE_IR_MIN_200BP_USD, USD_PV01 * - 200) END) AS SLIDE_IR_MIN_200BP_USD, SUM (CASE WHEN a.WM_BANKING_PRODUCT_SUB_GROUP = 'Swaption' THEN COALESCE (SLIDE_IR_MIN_300BP_USD, 0) ELSE COALESCE (SLIDE_IR_MIN_300BP_USD, USD_PV01 * - 300) END) AS SLIDE_IR_MIN_300BP_USD, SUM (CASE WHEN a.WM_BANKING_PRODUCT_SUB_GROUP = 'Swaption' THEN COALESCE (SLIDE_IR_MIN_50BP_USD, 0) ELSE COALESCE (SLIDE_IR_MIN_50BP_USD, USD_PV01 * - 50) END) AS SLIDE_IR_MIN_50BP_USD, SUM (CASE WHEN a.WM_BANKING_PRODUCT_SUB_GROUP = 'Swaption' THEN COALESCE (SLIDE_IR_PLS_50BP_USD, 0) ELSE COALESCE (SLIDE_IR_PLS_50BP_USD, USD_PV01 * 50) END) AS SLIDE_IR_PLS_50BP_USD, SUM (CASE WHEN a.WM_BANKING_PRODUCT_SUB_GROUP = 'Swaption' THEN COALESCE (SLIDE_IR_PLS_100BP_USD, 0) ELSE COALESCE (SLIDE_IR_PLS_100BP_USD, USD_PV01 * 100) END) AS SLIDE_IR_PLS_100BP_USD, SUM (CASE WHEN a.WM_BANKING_PRODUCT_SUB_GROUP = 'Swaption' THEN COALESCE (SLIDE_IR_PLS_200BP_USD, 0) ELSE COALESCE (SLIDE_IR_PLS_200BP_USD, USD_PV01 * 200) END) AS SLIDE_IR_PLS_200BP_USD, SUM (CASE WHEN a.WM_BANKING_PRODUCT_SUB_GROUP = 'Swaption' THEN COALESCE (SLIDE_IR_PLS_300BP_USD, 0) ELSE COALESCE (SLIDE_IR_PLS_300BP_USD, USD_PV01 * 300) END) AS SLIDE_IR_PLS_300BP_USD FROM ( SELECT a.POSITION_ID, a.COB_DATE, a.CCC_TAPS_COMPANY, a.CCC_BUSINESS_AREA, a.CCC_PRODUCT_LINE, a.VERTICAL_SYSTEM, a.BOOK, a.ACCOUNT, a.PRODUCT_TYPE_CODE, a.WM_BANKING_PRODUCT_GROUP, a.WM_BANKING_PRODUCT_SUB_GROUP, a.BANKING_PRODUCT_DESCRIPTION, a.PRODUCT_SUB_TYPE_CODE, a.PRODUCT_TYPE_NAME, SUM (COALESCE (((USD_TOTAL_COMMIT) :: numeric(15,5)), 0)) / 1000 AS USD_TOTAL_COMMIT, SUM (COALESCE (((USD_UNFUNDED_COMMIT) :: numeric(15,5)), 0)) / 1000 AS USD_UNFUNDED_COMMIT, SUM (COALESCE (((USD_NOTIONAL) :: numeric(15,5)), 0)) / 1000 AS USD_NOTIONAL, SUM (COALESCE (((USD_EXPOSURE) :: numeric(15,5)), 0)) / 1000 AS USD_EXPOSURE, SUM (COALESCE (((USD_PROCEED) :: numeric(15,5)), 0)) / 1000 AS MV, SUM (COALESCE (((USD_PV01SPRD) :: numeric(15,5)), 0)) / 1000 AS USD_PV01SPRD, SUM (COALESCE (((USD_IR_KAPPA) :: numeric(15,5)), 0) / 10) AS USD_IR_KAPPA, SUM (COALESCE (((USD_CONVX) :: numeric(15,5)), 0) / 1000) AS USD_CONVX, SUM (COALESCE (((USD_IR_UNIFIED_PV01) :: numeric(15,5)), 0)) AS USD_PV01, SUM ((a.SLIDE_IR_PLS_100BP_USD) :: numeric(15,5)) AS SLIDE_IR_PLS_100BP_USD, SUM ((a.SLIDE_IR_PLS_200BP_USD) :: numeric(15,5)) AS SLIDE_IR_PLS_200BP_USD, SUM ((a.SLIDE_IR_PLS_300BP_USD) :: numeric(15,5)) AS SLIDE_IR_PLS_300BP_USD, SUM ((a.SLIDE_IR_PLS_50BP_USD) :: numeric(15,5)) AS SLIDE_IR_PLS_50BP_USD, SUM ((a.SLIDE_IR_MIN_50BP_USD) :: numeric(15,5)) AS SLIDE_IR_MIN_50BP_USD, SUM ((a.SLIDE_IR_MIN_100BP_USD) :: numeric(15,5)) AS SLIDE_IR_MIN_100BP_USD, SUM ((a.SLIDE_IR_MIN_200BP_USD) :: numeric(15,5)) AS SLIDE_IR_MIN_200BP_USD, SUM ((a.SLIDE_IR_MIN_300BP_USD) :: numeric(15,5)) AS SLIDE_IR_MIN_300BP_USD FROM cdwuser.u_dm_wm_position a WHERE A.COB_DATE IN ( '2018-02-28', '2018-02-27', '2018-01-31', '2017-12-29', '2017-11-30', '2017-10-31', '2017-09-29', '2017-08-31', '2015-12-31' ) AND (A.VAR_EXCL_FL <> 'Y' OR A.BOOK IN ('MSDPB3M', 'MSDPT3M')) AND (A.CCC_HIERARCHY_LEVEL2 IN ('WEALTH MANAGEMENT', 'GLOBAL WEALTH MANAGEMENT') OR a.WM_BANKING_PRODUCT_SUB_GROUP IN ('Cash')) GROUP BY a.POSITION_ID, a.COB_DATE, a.CCC_TAPS_COMPANY, a.CCC_BUSINESS_AREA, a.CCC_PRODUCT_LINE, a.VERTICAL_SYSTEM, a.BOOK, a.ACCOUNT, a.PRODUCT_TYPE_CODE, a.PRODUCT_SUB_TYPE_CODE, a.WM_BANKING_PRODUCT_GROUP, a.WM_BANKING_PRODUCT_SUB_GROUP, a.BANKING_PRODUCT_DESCRIPTION, a.PRODUCT_TYPE_NAME ) A GROUP BY a.COB_DATE, a.CCC_TAPS_COMPANY, a.CCC_BUSINESS_AREA, a.CCC_PRODUCT_LINE, a.VERTICAL_SYSTEM, a.BOOK, a.ACCOUNT, a.WM_BANKING_PRODUCT_GROUP, a.WM_BANKING_PRODUCT_SUB_GROUP, a.PRODUCT_TYPE_NAME, a.PRODUCT_SUB_TYPE_CODE, CASE WHEN PRODUCT_TYPE_CODE = 'DEPOSIT' THEN (CASE WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-A', 'Tier-6','Tier-A-BAU', 'Tier-6-BAU') THEN 'Tier-A' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-B-BAU', 'Tier-5-BAU','Tier-B', 'Tier-5') THEN 'Tier-B' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-C-BAU', 'Tier-4-BAU','Tier-C', 'Tier-4') THEN 'Tier-C' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-D-BAU', 'Tier-3-BAU','Tier-D', 'Tier-3') THEN 'Tier-D' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-8-BAU','Tier-7-BAU', 'Tier-E-BAU','Tier-8','Tier-7', 'Tier-E') THEN 'Tier-E' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-F-BAU', 'Tier-1-BAU','Tier-F', 'Tier-1') THEN 'Tier-F' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-66-BAU','Tier-66') THEN 'Mgd-A' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-65-BAU','Tier-65') THEN 'Mgd-B' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-64','Tier-64-BAU') THEN 'Mgd-C' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-63','Tier-63-BAU') THEN 'Mgd-D' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-67', 'Tier-52', 'Tier-G','Tier-67-BAU', 'Tier-52-BAU', 'Tier-G-BAU') THEN 'Mgd-E' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-61', 'Tier-51', 'Tier-J','Tier-61-BAU', 'Tier-51-BAU', 'Tier-J-BAU') THEN 'Mgd-F' WHEN BANKING_PRODUCT_DESCRIPTION IN ('Tier-H', 'Tier-914','Tier-H-BAU', 'Tier-914-BAU') THEN 'Tier-H' ELSE 'OTHER' END) ELSE 'n/a' END