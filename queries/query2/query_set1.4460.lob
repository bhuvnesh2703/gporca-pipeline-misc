WITH x AS ( SELECT case when a.COB_DATE = '2018-02-28' then 1 else 0 end as is_cob, a.PRODUCT_DESCRIPTION as SECURITY_DESCRIPTION, a.CCC_BANKING_TRADING, SUM(a.SLIDE_EQ_MIN_1_USD) AS D1, SUM(a.SLIDE_EQ_MIN_05_USD) AS D05, SUM(a.SLIDE_EQ_MIN_10_USD) AS D10, SUM(a.SLIDE_EQ_MIN_20_USD) AS D20, SUM(a.SLIDE_EQ_MIN_30_USD) AS D30, 0 AS D99 FROM CDWUSER.u_eq_msr a WHERE a.COB_DATE IN('2018-02-28','2018-02-21') AND a.DIVISION='IED' AND a.SILO_SRC='IED' AND var_excl_fl <> 'Y' AND (a.CCC_BANKING_TRADING='TRADING' OR a.CCC_BANKING_TRADING IS NOT NULL) AND a.EXECUTIVE_MODEL LIKE '%MARGIN-LOAN%' AND a.CCC_BUSINESS_AREA <> 'PRIME BROKERAGE' AND PARENT_LEGAL_ENTITY = '0517(G)' GROUP BY case when a.COB_DATE = '2018-02-28' then 1 else 0 end, a.PRODUCT_DESCRIPTION, a.CCC_BANKING_TRADING UNION ALL SELECT is_cob, a.PRODUCT_DESCRIPTION, a.CCC_BANKING_TRADING, 0 AS D1, 0 AS D05, 0 AS D10, 0 AS D20, 0 AS D30, D99 FROM ( SELECT case when a.COB_DATE = '2018-02-28' then 1 else 0 end as is_cob, rank () OVER (PARTITION BY cob_date, PRODUCT_DESCRIPTION, CCC_BANKING_TRADING ORDER BY src_product_description) rnk, a.PRODUCT_DESCRIPTION, a.CCC_BANKING_TRADING, SUM (SLIDE_PAL_STK_JTD_USD) AS D99 FROM CDWUSER.u_eq_ext_msr a WHERE a.COB_DATE IN('2018-02-28','2018-02-21') AND a.DIVISION = 'IED' AND a.SILO_SRC = 'IED' AND var_excl_fl <> 'Y' AND (a.CCC_BANKING_TRADING = 'TRADING' OR a.CCC_BANKING_TRADING IS NOT NULL) AND a.EXECUTIVE_MODEL LIKE '%MARGIN-LOAN%' AND a.CCC_BUSINESS_AREA <> 'PRIME BROKERAGE' AND PARENT_LEGAL_ENTITY = '0517(G)' GROUP BY cob_date, src_product_description, case when a.COB_DATE = '2018-02-28' then 1 else 0 end, a.PRODUCT_DESCRIPTION, a.CCC_BANKING_TRADING ) a WHERE rnk = 1 ) SELECT RANK() OVER (ORDER BY ABS(SUM(CASE WHEN is_cob = 1 THEN D99 ELSE 0 END)) DESC) AS RANK, x.SECURITY_DESCRIPTION, x.CCC_BANKING_TRADING, SUM(CASE WHEN is_cob =1 THEN D99 ELSE 0 END) AS D99_COB, SUM(CASE WHEN is_cob =1 THEN D99 ELSE -D99 END) AS D99_CHANGE, SUM(CASE WHEN is_cob =1 THEN D1 ELSE 0 END) AS D1_COB, SUM(CASE WHEN is_cob =1 THEN D1 ELSE -D1 END) AS D1_CHANGE, SUM(CASE WHEN is_cob =1 THEN D05 ELSE 0 END) AS D05_COB, SUM(CASE WHEN is_cob =1 THEN D05 ELSE -D05 END) AS D05_CHANGE, SUM(CASE WHEN is_cob =1 THEN D10 ELSE 0 END) AS D10_COB, SUM(CASE WHEN is_cob =1 THEN D10 ELSE -D10 END) AS D10_CHANGE, SUM(CASE WHEN is_cob =1 THEN D20 ELSE 0 END) AS D20_COB, SUM(CASE WHEN is_cob =1 THEN D20 ELSE -D20 END) AS D20_CHANGE, SUM(CASE WHEN is_cob =1 THEN D30 ELSE 0 END) AS D30_COB, SUM(CASE WHEN is_cob =1 THEN D30 ELSE -D30 END) AS D30_CHANGE FROM x GROUP BY x.SECURITY_DESCRIPTION, x.CCC_BANKING_TRADING FETCH FIRST 15 ROWS ONLY