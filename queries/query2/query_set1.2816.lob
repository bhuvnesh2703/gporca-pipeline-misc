WITH x AS (SELECT e.COB_DATE, e.PRODUCT_DESCRIPTION AS Security_Description, e.Underlier_Product_Description AS Security_Description_Under, e.CCC_PL_REPORTING_REGION AS region, COALESCE (CASE WHEN e.PRODUCT_TYPE_CODE = 'OPTION' THEN e.TRADE_SIZE * e.LOT_SIZE * e.STRIKE * e.MEASURE_CONVERSION_FACTOR ELSE COALESCE (e.USD_DELTA, 0) * 1000 END, 0) AS Notional, SUM (COALESCE (e.SLIDE_EQ_MIN_20_USD, 0)) AS D20_Raw, SUM (COALESCE (e.SLIDE_EQ_MIN_30_USD, 0)) AS D30_Raw, e.EXPIRATION_DATE FROM cdwuser.U_EXP_MSR e WHERE e.DIVISION = 'IED' AND e.CCC_BANKING_TRADING = 'TRADING' AND e.COB_DATE IN ('2018-02-28','2018-01-31') AND e.CCC_STRATEGY IN ('CORE PRIMARY', 'CORE PRIMARY1') AND e.CASH_ISSUE_TYPE != 'INDEX' GROUP BY e.COB_DATE, COALESCE (CASE WHEN e.PRODUCT_TYPE_CODE = 'OPTION' THEN e.TRADE_SIZE * e.LOT_SIZE * e.STRIKE * e.MEASURE_CONVERSION_FACTOR ELSE COALESCE (e.USD_DELTA, 0) * 1000 END, 0), e.UNDERLIER_PRODUCT_DESCRIPTION, e.PRODUCT_DESCRIPTION, e.EXPIRATION_DATE, e.CCC_PL_REPORTING_REGION), y AS (SELECT security_description_under, security_description, expiration_date, region, RANK () OVER (PARTITION BY security_description_under ORDER BY ABS (SUM (CASE WHEN cob_date = '2016-01-11' THEN Notional ELSE 0 END)) DESC) AS PosRank FROM x GROUP BY security_description_under, security_description, expiration_date, region) ( SELECT RANK () OVER (ORDER BY ABS (SUM (CASE WHEN cob_date = '2018-02-28' THEN notional ELSE 0 END)) DESC) || '_' || 'TopGCM' AS Rank, x.security_description, x.Expiration_date, SUM (CASE WHEN cob_date = '2018-02-28' THEN notional ELSE 0 END) AS Notional_COB, SUM (CASE WHEN cob_date = '2018-02-28' THEN notional ELSE - notional END) AS Notional_DOD, SUM (CASE WHEN cob_date = '2018-02-28' THEN D20_raw ELSE 0 END) AS D20_COB, SUM (CASE WHEN cob_date = '2018-02-28' THEN D30_raw ELSE 0 END) AS D30_COB, SUM (CASE WHEN cob_date = '2018-02-28' THEN D30_raw ELSE - D30_raw END) AS D30_DOD FROM x INNER JOIN y ON (x.security_description_under = y.security_description_under AND x.security_description = y.security_description AND y.PosRank = 1) GROUP BY x.security_description_under, x.security_description, x.EXPIRATION_DATE FETCH FIRST 4 ROWS ONLY ) UNION ALL SELECT CUR.RANK || '_' || CUR.RANK_NAME AS RANK, CUR.PRODUCT_DESCRIPTION AS SECURITY_DESCRIPTION, CUR.EXPIRATION_DATE, CUR.NOTIONAL AS NOTIONAL_COB, COALESCE (CUR.NOTIONAL, 0) - COALESCE (PREV.NOTIONAL, 0) AS NOTIONAL_DOD, CUR.SLIDE_EQ_MIN_20_USD AS D20_COB, CUR.SLIDE_EQ_MIN_30_USD AS D30_COB, COALESCE (CUR.SLIDE_EQ_MIN_30_USD, 0) - COALESCE (PREV.SLIDE_EQ_MIN_30_USD, 0) AS D30_DOD FROM CDWUSER.U_DM_CONC CUR LEFT OUTER JOIN CDWUSER.U_DM_CONC PREV ON CUR.RANK_TYPE = PREV.RANK_TYPE AND CUR.RANK_NAME = PREV.RANK_NAME AND CUR.PRODUCT_DESCRIPTION = PREV.PRODUCT_DESCRIPTION AND CUR.EXPIRATION_DATE = PREV.EXPIRATION_DATE AND PREV.RANK_TYPE = 'GCMPOSITIONS' AND PREV.COB_DATE = '2018-01-31' WHERE CUR.RANK_TYPE = 'GCMPOSITIONS' AND CUR.COB_DATE = '2018-02-28' AND CUR.NOTIONAL <> 0