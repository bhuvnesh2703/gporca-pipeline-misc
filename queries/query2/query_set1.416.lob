WITH IED AS ( SELECT COB_DATE ,PROCESS_ID ,POSITION_ID ,CCC_PL_REPORTING_REGION ,LE_GROUP ,underlier_tick ,sum(D50RAW) AS D50RAW ,Sum(D30RAW) AS D30RAW ,sum(D20RAW) AS D20RAW ,sum(D10RAW) AS D10RAW ,sum(D5RAW) AS D5RAW ,sum(D2RAW) AS D2RAW ,sum(D1RAW) AS D1RAW ,sum(P1RAW) AS P1RAW ,sum(P2RAW) AS P2RAW ,sum(P5RAW) AS P5RAW ,sum(P10RAW) AS P10RAW ,sum(P20RAW) AS P20RAW FROM ( SELECT e.COB_DATE ,PROCESS_ID ,POSITION_ID ,e.CCC_PL_REPORTING_REGION ,e.LE_GROUP ,underlier_tick ,sum(e.SLIDE_EQ_MIN_50_USD) AS D50RAW ,sum(e.SLIDE_EQ_MIN_30_USD) AS D30RAW ,sum(e.SLIDE_EQ_MIN_20_USD) AS D20RAW ,sum(e.SLIDE_EQ_MIN_10_USD) AS D10RAW ,sum(e.SLIDE_EQ_MIN_05_USD) AS D5RAW ,sum(e.SLIDE_EQ_MIN_02_USD) AS D2RAW ,sum(e.SLIDE_EQ_MIN_1_USD) AS D1RAW ,sum(e.SLIDE_EQ_PLS_1_USD) AS P1RAW ,sum(e.SLIDE_EQ_PLS_02_USD) AS P2RAW ,sum(e.SLIDE_EQ_PLS_05_USD) AS P5RAW ,sum(e.SLIDE_EQ_PLS_10_USD) AS P10RAW ,sum(e.SLIDE_EQ_PLS_20_USD) AS P20RAW FROM CDWUSER.U_EQ_MSR e       WHERE  e.COB_DATE IN('2018-02-28', '2018-02-27')   AND e.CCC_DIVISION = 'INSTITUTIONAL EQUITY DIVISION' AND e.CCC_BANKING_TRADING <> 'BANKING' AND e.CCC_PL_REPORTING_REGION ='AMERICAS' AND e.CCC_STRATEGY ='EMERGING MARKETS' GROUP BY e.PROCESS_ID ,POSITION_ID ,e.COB_DATE ,e.CCC_PL_REPORTING_REGION ,underlier_tick ,e.LE_GROUP ) X GROUP BY PROCESS_ID ,POSITION_ID ,COB_DATE ,CCC_PL_REPORTING_REGION ,LE_GROUP ,underlier_tick ) ,CountryWeights AS ( SELECT d.COB_DATE ,PROCESS_ID ,POSITION_ID ,CCC_PL_REPORTING_REGION ,LE_GROUP ,ISSUER_COUNTRY_CODE_DECOMP AS COUNTRY ,abs(sum(PRODUCT_WEIGHT_DECOMP)) AS WEIGHT FROM CDWUSER.U_DECOMP_MSR d       WHERE  d.COB_DATE IN('2018-02-28', '2018-02-27')   AND d.ISSUER_COUNTRY_CODE_DECOMP IN ( 'PER' ,'CHL' ,'COL' ,'MEX' ,'BRA' ,'USA' ) AND d.CCC_DIVISION = 'INSTITUTIONAL EQUITY DIVISION' AND d.CCC_BANKING_TRADING <> 'BANKING' AND d.CCC_PL_REPORTING_REGION ='AMERICAS' AND d.CCC_STRATEGY ='EMERGING MARKETS' GROUP BY d.COB_DATE ,PROCESS_ID ,POSITION_ID ,CCC_PL_REPORTING_REGION ,LE_GROUP ,ISSUER_COUNTRY_CODE_DECOMP HAVING sum(PRODUCT_WEIGHT_DECOMP) <> 0 ) ,GrossWeights AS ( SELECT x.COB_DATE ,PROCESS_ID ,POSITION_ID ,CCC_PL_REPORTING_REGION ,LE_GROUP ,sum(abs(WEIGHT)) AS GROSS_WEIGHT FROM CountryWeights x GROUP BY x.COB_DATE ,PROCESS_ID ,POSITION_ID ,CCC_PL_REPORTING_REGION ,LE_GROUP ) ,Decomp AS ( SELECT w.COB_DATE ,w.CCC_PL_REPORTING_REGION ,w.LE_GROUP ,w.Process_ID ,w.Position_id ,COUNTRY ,abs(WEIGHT / GROSS_WEIGHT) AS WEIGHT FROM CountryWeights w INNER JOIN GrossWeights g ON ( w.cob_date = g.cob_date AND w.process_id = g.process_id AND w.position_id = g.position_id AND w.CCC_PL_REPORTING_REGION = g.CCC_PL_REPORTING_REGION AND w.LE_GROUP = g.LE_GROUP ) ) SELECT VIEW ,COB_DATE ,CCC_PL_REPORTING_REGION ,LE_GROUP ,CASE WHEN ( country = 'BRA' AND underlier_tick = 'bvsp' ) THEN 'IBOV' WHEN ( country = 'BRA' AND underlier_tick = 'ewz' ) THEN 'EWZ' WHEN country = 'BRA' THEN 'BRA-Other' WHEN country = 'USA' THEN 'US' ELSE country END AS Classification ,COUNTRY ,SUM(D50RAW + (10 * (D50RAW - D30RAW) / 20)) AS D60RAW ,SUM(D50RAW + (9 * (D50RAW - D30RAW) / 20)) AS D59RAW ,SUM(D50RAW + (8 * (D50RAW - D30RAW) / 20)) AS D58RAW ,SUM(D50RAW + (7 * (D50RAW - D30RAW) / 20)) AS D57RAW ,SUM(D50RAW + (6 * (D50RAW - D30RAW) / 20)) AS D56RAW ,SUM(D50RAW + (5 * (D50RAW - D30RAW) / 20)) AS D55RAW ,SUM(D50RAW + (4 * (D50RAW - D30RAW) / 20)) AS D54RAW ,SUM(D50RAW + (3 * (D50RAW - D30RAW) / 20)) AS D53RAW ,SUM(D50RAW + (2 * (D50RAW - D30RAW) / 20)) AS D52RAW ,SUM(D50RAW + (1 * (D50RAW - D30RAW) / 20)) AS D51RAW ,SUM(D50RAW) AS D50RAW ,SUM(D30RAW + (19 * (D50RAW - D30RAW) / 20)) AS D49RAW ,SUM(D30RAW + (18 * (D50RAW - D30RAW) / 20)) AS D48RAW ,SUM(D30RAW + (17 * (D50RAW - D30RAW) / 20)) AS D47RAW ,SUM(D30RAW + (16 * (D50RAW - D30RAW) / 20)) AS D46RAW ,SUM(D30RAW + (15 * (D50RAW - D30RAW) / 20)) AS D45RAW ,SUM(D30RAW + (14 * (D50RAW - D30RAW) / 20)) AS D44RAW ,SUM(D30RAW + (13 * (D50RAW - D30RAW) / 20)) AS D43RAW ,SUM(D30RAW + (12 * (D50RAW - D30RAW) / 20)) AS D42RAW ,SUM(D30RAW + (11 * (D50RAW - D30RAW) / 20)) AS D41RAW ,SUM(D30RAW + (10 * (D50RAW - D30RAW) / 20)) AS D40RAW ,SUM(D30RAW + (9 * (D50RAW - D30RAW) / 20)) AS D39RAW ,SUM(D30RAW + (8 * (D50RAW - D30RAW) / 20)) AS D38RAW ,SUM(D30RAW + (7 * (D50RAW - D30RAW) / 20)) AS D37RAW ,SUM(D30RAW + (6 * (D50RAW - D30RAW) / 20)) AS D36RAW ,SUM(D30RAW + (5 * (D50RAW - D30RAW) / 20)) AS D35RAW ,SUM(D30RAW + (4 * (D50RAW - D30RAW) / 20)) AS D34RAW ,SUM(D30RAW + (3 * (D50RAW - D30RAW) / 20)) AS D33RAW ,SUM(D30RAW + (2 * (D50RAW - D30RAW) / 20)) AS D32RAW ,SUM(D30RAW + (1 * (D50RAW - D30RAW) / 20)) AS D31RAW ,SUM(D30RAW) AS D30RAW ,SUM(D20RAW + (9 * (D30RAW - D20RAW) / 10)) AS D29RAW ,SUM(D20RAW + (8 * (D30RAW - D20RAW) / 10)) AS D28RAW ,SUM(D20RAW + (7 * (D30RAW - D20RAW) / 10)) AS D27RAW ,SUM(D20RAW + (6 * (D30RAW - D20RAW) / 10)) AS D26RAW ,SUM(D20RAW + (5 * (D30RAW - D20RAW) / 10)) AS D25RAW ,SUM(D20RAW + (4 * (D30RAW - D20RAW) / 10)) AS D24RAW ,SUM(D20RAW + (3 * (D30RAW - D20RAW) / 10)) AS D23RAW ,SUM(D20RAW + (2 * (D30RAW - D20RAW) / 10)) AS D22RAW ,SUM(D20RAW + (1 * (D30RAW - D20RAW) / 10)) AS D21RAW ,SUM(D20RAW) AS D20RAW ,SUM(D10RAW + (9 * (D20RAW - D10RAW) / 10)) AS D19RAW ,SUM(D10RAW + (8 * (D20RAW - D10RAW) / 10)) AS D18RAW ,SUM(D10RAW + (7 * (D20RAW - D10RAW) / 10)) AS D17RAW ,SUM(D10RAW + (6 * (D20RAW - D10RAW) / 10)) AS D16RAW ,SUM(D10RAW + (5 * (D20RAW - D10RAW) / 10)) AS D15RAW ,SUM(D10RAW + (4 * (D20RAW - D10RAW) / 10)) AS D14RAW ,SUM(D10RAW + (3 * (D20RAW - D10RAW) / 10)) AS D13RAW ,SUM(D10RAW + (2 * (D20RAW - D10RAW) / 10)) AS D12RAW ,SUM(D10RAW + (1 * (D20RAW - D10RAW) / 10)) AS D11RAW ,SUM(D10RAW) AS D10RAW ,SUM(D5RAW + (4 * (D10RAW - D5RAW) / 5)) AS D9RAW ,SUM(D5RAW + (3 * (D10RAW - D5RAW) / 5)) AS D8RAW ,SUM(D5RAW + (2 * (D10RAW - D5RAW) / 5)) AS D7RAW ,SUM(D5RAW + (1 * (D10RAW - D5RAW) / 5)) AS D6RAW ,SUM(D5RAW) AS D5RAW ,SUM(D2RAW + (2 * (D5RAW - D2RAW) / 3)) AS D4RAW ,SUM(D2RAW + (1 * (D5RAW - D2RAW) / 3)) AS D3RAW ,SUM(D2RAW) AS D2RAW ,SUM(D1RAW) AS D1RAW ,0 AS BASE ,SUM(P1RAW) AS P1RAW ,SUM(P2RAW) AS P2RAW ,SUM(P2RAW + (1 * (P5RAW - P2RAW) / 3)) AS P3RAW ,SUM(P2RAW + (2 * (P5RAW - P2RAW) / 3)) AS P4RAW ,SUM(P5RAW) AS P5RAW ,SUM(P5RAW + (1 * (P10RAW - P5RAW) / 5)) AS P6RAW ,SUM(P5RAW + (2 * (P10RAW - P5RAW) / 5)) AS P7RAW ,SUM(P5RAW + (3 * (P10RAW - P5RAW) / 5)) AS P8RAW ,SUM(P5RAW + (4 * (P10RAW - P5RAW) / 5)) AS P9RAW ,SUM(P10RAW) AS P10RAW ,SUM(P10RAW + (1 * (P20RAW - P10RAW) / 10)) AS P11RAW ,SUM(P10RAW + (2 * (P20RAW - P10RAW) / 10)) AS P12RAW ,SUM(P10RAW + (3 * (P20RAW - P10RAW) / 10)) AS P13RAW ,SUM(P10RAW + (4 * (P20RAW - P10RAW) / 10)) AS P14RAW ,SUM(P10RAW + (5 * (P20RAW - P10RAW) / 10)) AS P15RAW ,SUM(P10RAW + (6 * (P20RAW - P10RAW) / 10)) AS P16RAW ,SUM(P10RAW + (7 * (P20RAW - P10RAW) / 10)) AS P17RAW ,SUM(P10RAW + (8 * (P20RAW - P10RAW) / 10)) AS P18RAW ,SUM(P10RAW + (9 * (P20RAW - P10RAW) / 10)) AS P19RAW ,SUM(P20RAW) AS P20RAW FROM ( SELECT 'Decomp' AS VIEW ,i.COB_DATE ,COUNTRY ,i.CCC_PL_REPORTING_REGION ,i.LE_GROUP ,i.underlier_tick ,(D50RAW * WEIGHT) AS D50RAW ,(D30RAW * WEIGHT) AS D30RAW ,(D20RAW * WEIGHT) AS D20RAW ,(D10RAW * WEIGHT) AS D10RAW ,(D5RAW * WEIGHT) AS D5RAW ,(D2RAW * WEIGHT) AS D2RAW ,(D1RAW * WEIGHT) AS D1RAW ,(P1RAW * WEIGHT) AS P1RAW ,(P2RAW * WEIGHT) AS P2RAW ,(P5RAW * WEIGHT) AS P5RAW ,(P10RAW * WEIGHT) AS P10RAW ,(P20RAW * WEIGHT) AS P20RAW FROM IED i INNER JOIN Decomp d ON ( i.PROCESS_ID = d.PROCESS_ID AND i.POSITION_ID = d.POSITION_ID AND i.COB_DATE = d.COB_DATE AND i.CCC_PL_REPORTING_REGION = d.CCC_PL_REPORTING_REGION AND i.LE_GROUP = d.LE_GROUP ) ) X GROUP BY VIEW ,Country ,COB_DATE ,CCC_PL_REPORTING_REGION ,LE_GROUP ,CASE WHEN ( country = 'BRA' AND underlier_tick = 'bvsp' ) THEN 'IBOV' WHEN ( country = 'BRA' AND underlier_tick = 'ewz' ) THEN 'EWZ' WHEN country = 'BRA' THEN 'BRA-Other' WHEN country = 'USA' THEN 'US' ELSE country END