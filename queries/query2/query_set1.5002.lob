with src as ( SELECT A.COB_DATE,                    A.ccc_division,                     A.ccc_BUSINESS_AREA,                     A.ccc_PRODUCT_LINE,                     A.ccc_STRATEGY,                     A.ccc_STRATEGY_DETAILS,                     A.ccc_PL_REPORTING_REGION as PL_REPORTING_REGION,                     A.BOOK,                     A.COUNTRY,                    A.banking_trading,                    A.PRODUCT_TYPE_CODE as sectype,                    A.PRODUCT_HIERARCHY_LEVEL7,                    CASE WHEN A.COUNTRY NOT IN ('VIR','IMN','GIB','BHS','DNK','BMU','CYM','AUS','AUT','BEL','CAN','CHE','DEU','FIN','FRA','GBR','JPN','LUX','NLD','NOR','NZL','SWE','USA','JEY','GGY','SUP','XS','XCI','VGB','CYP','CHN','SGP','TWN','HKG','CZE','ISR','QAT','SVK','SAU','SVN','CHL') THEN 'EMERGING MARKETS'                                WHEN BOOK IN ('SCALL','SCCDS','TOTMT') THEN 'EXCLUDED' WHEN CCC_BUSINESS_AREA IN ('STRUCTURED RATES') AND PRODUCT_TYPE_CODE IN ('SWAP') THEN 'CREDIT-CORP'                               WHEN PRODUCT_TYPE_CODE IN ('EQUITY','OPTION','STOCK','ASCOT','WARRNT','ADR','FUND','SWAP','FUTURE','ETF') OR (PRODUCT_TYPE_CODE='PREF' AND VERTICAL_SYSTEM NOT LIKE '%C1%') THEN 'EQUITY'                              WHEN CCC_DIVISION = 'MS PRINCIPAL INVESTING' OR CCC_BUSINESS_AREA IN ('MSPI INVESTING','PRINCIPAL INVESTING') OR (PRODUCT_TYPE_CODE = 'EQUITY' AND (CCC_BUSINESS_AREA IN ('CREDIT-CORPORATES','CREDIT CORPORATES PRIMARY','PROP WORKOUT','IRCC MANAGEMENT') OR CCC_DIVISION='INVESTMENTS')) THEN 'PRIVATE EQUITY OTHER'                               WHEN ((CCC_PRODUCT_LINE LIKE ('%CVA%') or CCC_STRATEGY LIKE ('%CVA%')) AND CCC_DIVISION NOT IN ('INT RATE CREDIT CURRENCY','FIXED INCOME DIVISION','INTEREST RATE CURRENCY GR') AND CCC_PRODUCT_LINE<>'COUNTERPARTY MANAGEMENT') OR CCC_PRODUCT_LINE IN ('MS CVA MNE - DERIVATIVES','MS CVA MNE DERIVS IRCC') OR CCC_STRATEGY IN ('MS CVA MPE - DERIVATIVES') THEN 'CVA OTHER'                               WHEN (CCC_PRODUCT_LINE LIKE ('%CVA%') or CCC_STRATEGY LIKE ('%CVA%')) AND (CCC_DIVISION IN ('INT RATE CREDIT CURRENCY','FIXED INCOME DIVISION','INTEREST RATE CURRENCY GR') OR CCC_PRODUCT_LINE='COUNTERPARTY MANAGEMENT') THEN 'CVA OTHER FID'                               WHEN CCC_PRODUCT_LINE LIKE ('%CVA%') OR CCC_STRATEGY LIKE ('%CVA%') OR CCC_BUSINESS_AREA LIKE ('%CVA%')  THEN 'CVA UNCAT.'                               WHEN (CCC_BUSINESS_AREA IN ('CREDIT-SECURITIZED PRODS','SECURITIZED PRODUCT GRP','SECURITIZED PRODUCTS GRP') AND CCC_PRODUCT_LINE in ('MANAGEMENT','SPG MANAGEMENT')) THEN 'EXCLUDED'                               WHEN CCC_BUSINESS_AREA='LENDING' AND (CCC_PRODUCT_LINE='PROJECT FINANCE' or ccc_strategy = 'PROJECT FINANCE') THEN 'EXCLUDED'                              WHEN ((VERTICAL_SYSTEM IN ('SPG_NY','SPG_LN','SPG_TK','MBS_NY','MUNI_NY') OR upper(SPG_DESC) LIKE '%ABS%' OR upper(SPG_DESC) LIKE '%CMBS%' OR upper(SPG_DESC) LIKE '%COLONNADE%' OR PRODUCT_TYPE_CODE LIKE 'ARS%' OR upper(SPG_DESC) LIKE '%RMBS%' OR upper(SPG_DESC) LIKE '%RPX%' OR upper(SPG_DESC) LIKE '%WAREHOUSE%' OR PRODUCT_TYPE_CODE='RPX') AND SPG_DESC NOT IN ('SWAP','RATE FUTURES','GOVERNMENT')) AND upper(SPG_DESC) NOT LIKE '%CORP%' AND PRODUCT_TYPE_CODE<>'MUNI' THEN 'SECURITIZED'                              WHEN CCC_BUSINESS_AREA IN ('STRUCTURED CREDIT PROD','CREDIT DERIVATIVE PROD', 'DSP - CREDIT') THEN 'CREDIT-CORP'                               WHEN FID1_SENIORITY IN ('SUBT1', 'SUBUT2') AND CCC_DIVISION IN ('INT RATE CREDIT CURRENCY','FIXED INCOME DIVISION') AND PRODUCT_TYPE_CODE IN ('BOND','PREF') AND CCC_STRATEGY<>'DISTRESSED TRADING1' THEN 'CREDIT-HY'                               WHEN BOOK IN ('JVMK2','JVPMK') THEN 'CREDIT-HY'                              WHEN CCC_BUSINESS_AREA='LENDING' AND BOOK LIKE '%WORKOUT%' THEN 'CREDIT-HY'                              WHEN CCC_BUSINESS_AREA='LENDING' AND (CCC_PRODUCT_LINE='HELD FOR INVESTMENT' or CCC_STRATEGY='HELD FOR INVESTMENT') THEN 'EXCLUDED'                              WHEN CCC_BUSINESS_AREA in ('CREDIT-CORPORATES','CREDIT CORPORATES PRIMARY') AND (CCC_PRODUCT_LINE IN ('NON INVSMT GRADE PRIMARY','NON IG PRIMARY - LOANS','NON IG PRIMARY - HY BOND', 'PRIMARY - LOANS') or ccc_strategy = 'NON IG PRIMARY - HY BOND') THEN 'EXCLUDED'                              WHEN CCC_BUSINESS_AREA IN('PROPRIETARY TRADING','PROPRIETARY TRADING1') OR CCC_PRODUCT_LINE IN ('PROP WORKOUT - CREDIT ARB','PROP WORKOUT - COURNOT','LEGACY CREDIT TRADING','COURNOT','CREDIT ARBITRAGE') OR CCC_STRATEGY IN ('PROP WORKOUT - CREDIT ARB','PROP WORKOUT - COURNOT','LEGACY CREDIT TRADING','COURNOT','CREDIT ARBITRAGE') OR (CCC_PRODUCT_LINE = 'CREDIT TRADING' AND CCC_BUSINESS_AREA = 'CREDIT PROPRIETARY TDG' AND CCC_PL_REPORTING_REGION = 'AMERICAS') OR BOOK IN ('CCINY','CFBND','CFPNY','SPAIR','PIVOL','PICOR') THEN 'CREDIT-CORP'                               WHEN PRODUCT_TYPE_CODE='CONVRT' AND (CCC_DIVISION IN ('COMMODITIES','INT RATE CREDIT CURRENCY','FIXED INCOME DIVISION','NON CORE','WW FID OTHER','FIC OTHER') OR CCC_PRODUCT_LINE IN ('CONVERTIBLE PRODUCTS') OR CCC_BUSINESS_AREA IN ('COMMODITIES')) AND CCC_PRODUCT_LINE NOT IN ('DISTRESSED TRADING','PAR LOANS TRADING') AND CCC_DIVISION NOT IN ('NON CORE') AND CCC_BUSINESS_AREA NOT IN  ('NON CORE') THEN 'CREDIT-CORP'                               WHEN CCC_STRATEGY='DISTRESSED TRADING1' AND PRODUCT_TYPE_CODE IN ('CDSOPTIDX','CRDINDEX','LOANINDEX','CRDBSKT') THEN 'CREDIT-CORP'                              WHEN (CCC_BUSINESS_AREA IN ('PROP WORKOUT') OR CCC_PRODUCT_LINE IN ('CONVERTIBLE TRADING SEC','EXCESS TRADING','FINANCING LOANS') OR CCC_STRATEGY IN ('DISTRESSED TRADING1','CONVERTIBLE TRADING SEC','EXCESS TRADING','FINANCING LOANS') OR ((CCC_PRODUCT_LINE IN ('PAR LOANS TRADING') or CCC_STRATEGY IN ('PAR LOANS TRADING','PRIVATE LOANS TRADING')) AND BOOK IN ('TRAZY')) OR BOOK IN ('SYNNY','SELNA') OR BOOK LIKE ('%EXCESS%') OR CCC_BUSINESS_AREA IN ('CONVERTIBLE TRADING SEC','LEVERAGED LOANS') OR (CCC_PRODUCT_LINE IN ('LEVERAGED CREDIT TRADING','LEVERAGED CREDIT TRADING1') AND CCC_STRATEGY <> 'NA HY TDG')) OR ((upper(SPG_DESC) LIKE '%CORPORATE CDO%'                                      OR upper(SPG_DESC) LIKE '%CORPORATE CLO%')) OR (upper(SPG_DESC) LIKE '%CORP%' AND RATING_GRADE_CD IN ('NR','NIG') AND (CCC_BUSINESS_AREA IN ('CREDIT-SECURITIZED PRODS','SECURITIZED PRODUCTS GRP','SECURITIZED PRODUCT GRP') OR CCC_PRODUCT_LINE LIKE 'CDO PRIMARY%' OR CCC_PRODUCT_LINE LIKE 'CLIENT NON RESI TRADING%' OR CCC_PRODUCT_LINE LIKE 'COMMERCIAL RE (PTG)%' OR CCC_PRODUCT_LINE LIKE 'MORTGAGE PROP TRADING%' OR CCC_STRATEGY LIKE 'MORTGAGE PROP TRADING%' OR CCC_PRODUCT_LINE LIKE '%GPCG%'                               OR CCC_PRODUCT_LINE LIKE 'PTG%' OR CCC_STRATEGY LIKE 'PTG%' OR CCC_PRODUCT_LINE LIKE 'RESI SEC%' OR CCC_PRODUCT_LINE LIKE 'SECURITIZED SEC%' OR CCC_DIVISION IN ('NON CORE') OR CCC_BUSINESS_AREA IN ('NON CORE'))) THEN 'CREDIT-HY'                               WHEN (CCC_PRODUCT_LINE IN ('PAR LOANS TRADING') or CCC_STRATEGY IN ('PAR LOANS TRADING','PRIVATE LOANS TRADING')) AND BOOK NOT IN ('TRAZY') THEN 'CREDIT-CORP'                                ELSE 'CREDIT-CORP'                     END AS CREDIT_TYPE_FLAG,                    CASE WHEN (A.SPG_DESC LIKE ('%COLONNADE%') OR A.SPG_DESC='OTHER CREDIT BASKET' AND A.BOOK IN ('COLONNADE')) OR A.BOOK='AEOLUS GPCG' THEN 'COLONNADE'                           WHEN SPG_DESC LIKE ('%CMBS%') THEN 'CMBS'                           WHEN SPG_DESC LIKE ('%RMBS%') OR SPG_DESC='RPX' OR PRODUCT_TYPE_CODE='RPX' THEN 'RESI'                           WHEN SPG_DESC LIKE ('ABS%') OR SPG_DESC IN ('OTHER CREDIT BASKET','OTHER LOANS') THEN 'ABS'                           WHEN PRODUCT_TYPE_CODE='MUNI' THEN 'OTHER'                           ELSE 'OTHER'                    END AS SECURITIZED_CATEGORY,                    SUM(A.usd_net_exposure) usd_net_exposure,                    SUM(A.usd_commit) usd_commit,                         SUM(A.usd_notional) usd_notional,                    SUM(A.market_value) market_value,                    SUM(A.usd_pv01) usd_pv01,                    SUM(A.usd_fx) usd_fx,                    SUM(A.cm_delta) cm_delta,                    SUM(A.nramv) nramv,                    SUM(A.usd_kappa) usd_kappa,                    SUM(A.usd_fx_kappa) usd_fx_kappa,                    SUM(A.usd_cm_kappa) usd_cm_kappa,                    SUM(A.usd_eq_kappa) usd_eq_kappa,                    SUM(A.usd_ir_gamma) usd_ir_gamma,                    SUM(A.usd_pv01sprd) usd_pv01sprd,                    SUM(A.usd_cr_kappa) usd_cr_kappa,                    SUM(A.usd_sev01) usd_sev01,                    SUM(A.usd_pv10_bench) usd_pv10_bench,           case when a.cob_date = '2018-02-28' then 1                           else 0                     end as is_cob                    FROM(                    SELECT COB_DATE,                    vertical_system,                    spg_desc,                    fid1_seniority,                    RATING_GRADE_CD,                    ccc_division,                     ccc_BUSINESS_AREA,                     ccc_PRODUCT_LINE,                     ccc_STRATEGY,                     ccc_STRATEGY_DETAILS,                     ccc_PL_REPORTING_REGION,                     BOOK,                     COUNTRY_CD_OF_RISK as COUNTRY,                    ccc_banking_trading as banking_trading,                    product_type_code,                    PRODUCT_HIERARCHY_LEVEL7,                    SUM(usd_exposure) as usd_net_exposure,                    SUM(usd_total_commit) as usd_commit,                    SUM(usd_notional) usd_notional,                    SUM((CASE WHEN FEED_SOURCE_NAME NOT IN ('ER1') THEN coalesce(USD_MARKET_VALUE, 0) ELSE  0 END)) as market_value,                    SUM(usd_ir_unified_pv01) as usd_pv01,                    SUM(case when CURRENCY_OF_MEASURE not in ('UBD', 'USD')                           then usd_fx                           else 0                     end) as usd_fx,                    SUM(coalesce(USD_CM_DELTA, 0))  as cm_delta,                     SUM(case when FEED_SOURCE_NAME NOT IN ('ER1') then coalesce(USD_DELTA, 0) else 0 end) as nramv,                    SUM(coalesce(usd_ir_kappa,0)/10) + SUM(coalesce(usd_real_kappa,0)/10) as usd_kappa,                    SUM(CASE WHEN VERTICAL_SYSTEM LIKE '%STS%' THEN USD_FX_PARTIAL_KAPPA ELSE USD_FX_KAPPA END) as usd_fx_kappa,                       SUM(coalesce(usd_cm_kappa,0)) as usd_cm_kappa,                                                                    SUM(usd_eq_kappa) AS usd_eq_kappa,                    SUM(usd_ir_partial_gamma) as usd_ir_gamma,                    SUM(usd_pv01sprd) AS usd_pv01sprd,                    SUM(usd_cr_kappa) AS usd_cr_kappa,                    SUM(usd_sev01*10) as usd_sev01,                    SUM(usd_pv10_bench) AS usd_pv10_bench               FROM cdwuser.U_EXP_MSR              WHERE      cob_date in ('2018-02-28', '2018-01-31' )                 AND ccc_taps_company IN ('0201','0103','0205','0206','0530','5924')                AND var_excl_fl <> 'Y'              GROUP BY COB_DATE,                    vertical_system,                    spg_desc,                    fid1_seniority,                    RATING_GRADE_CD,                    ccc_division,                     ccc_BUSINESS_AREA,                     ccc_PRODUCT_LINE,                     ccc_STRATEGY,                     ccc_STRATEGY_DETAILS,                     ccc_PL_REPORTING_REGION,                     BOOK,                     COUNTRY_CD_OF_RISK ,                    ccc_banking_trading,                    product_type_code,                    PRODUCT_HIERARCHY_LEVEL7 UNION ALL SELECT COB_DATE,                    vertical_system,                    spg_desc,                    fid1_seniority,                    case when mrd_rating in ('A', 'AA', 'AAA', 'BBB') then 'IG'                           when mrd_rating in ('BB', 'B', 'CCC', 'CC', 'C', 'D') then 'NIG'                           else 'NR'                    end as RATING_GRADE_CD,                    ccc_division,                     ccc_BUSINESS_AREA,                     ccc_PRODUCT_LINE,                     ccc_STRATEGY,                     ccc_STRATEGY_DETAILS,                     ccc_PL_REPORTING_REGION,                     BOOK,                     COUNTRY_CD_OF_RISK as COUNTRY,                    ccc_banking_trading as banking_trading,                    product_type_code,                    PRODUCT_HIERARCHY_LEVEL7,                                        0 as usd_net_exposure,                    0 as usd_commit,                    0 as usd_notional,                    0 as market_value,                    0 as usd_pv01,                    0 as usd_fx,                    0 as cm_delta,                    SUM(case when COALESCE (PRODUCT_TYPE_CODE_DECOMP, '') <> 'COMM' AND COALESCE (CASH_ISSUE_TYPE, '') <> 'COMM' then coalesce(USD_EQ_DELTA_DECOMP, 0) else 0 end) as nramv,                    0 as usd_kappa,                    0 as usd_fx_kappa,                    0 as usd_cm_kappa,                    0 as usd_eq_kappa,                    0 as usd_ir_gamma,                    0 as usd_pv01sprd,                    0 as usd_cr_kappa,                    0 as usd_sev01,                    0 as usd_pv10_bench               FROM cdwuser.U_DECOMP_MSR              WHERE                 vertical_system NOT LIKE ('PIPELINE%')    AND cob_date in ('2018-02-28', '2018-01-31' )                 AND ccc_taps_company IN ('0201','0103','0205','0206','0530','5924')                AND var_excl_fl <> 'Y'                AND FEED_SOURCE_ID = 301 GROUP BY COB_DATE,                    vertical_system,                    spg_desc,                    fid1_seniority,                    case when mrd_rating in ('A', 'AA', 'AAA', 'BBB') then 'IG'                           when mrd_rating in ('BB', 'B', 'CCC', 'CC', 'C', 'D') then 'NIG'                           else 'NR'                    end ,                    ccc_division,                     ccc_BUSINESS_AREA,                     ccc_PRODUCT_LINE,                     ccc_STRATEGY,                     ccc_STRATEGY_DETAILS,                     ccc_PL_REPORTING_REGION,                     BOOK,                     COUNTRY_CD_OF_RISK ,                    ccc_banking_trading,                    product_type_code,                    PRODUCT_HIERARCHY_LEVEL7                                                                      ) A GROUP BY A.COB_DATE,                    A.ccc_division,                     A.ccc_BUSINESS_AREA,                     A.ccc_PRODUCT_LINE,                     A.ccc_STRATEGY,                     A.ccc_STRATEGY_DETAILS,                     A.ccc_PL_REPORTING_REGION ,                     A.BOOK,                     A.COUNTRY,                    A.banking_trading,                    A.PRODUCT_TYPE_CODE,                    A.PRODUCT_HIERARCHY_LEVEL7,                    CASE WHEN A.COUNTRY NOT IN ('VIR','IMN','GIB','BHS','DNK','BMU','CYM','AUS','AUT','BEL','CAN','CHE','DEU','FIN','FRA','GBR','JPN','LUX','NLD','NOR','NZL','SWE','USA','JEY','GGY','SUP','XS','XCI','VGB','CYP','CHN','SGP','TWN','HKG','CZE','ISR','QAT','SVK','SAU','SVN','CHL') THEN 'EMERGING MARKETS'                                WHEN BOOK IN ('SCALL','SCCDS','TOTMT') THEN 'EXCLUDED' WHEN CCC_BUSINESS_AREA IN ('STRUCTURED RATES') AND PRODUCT_TYPE_CODE IN ('SWAP') THEN 'CREDIT-CORP'                               WHEN PRODUCT_TYPE_CODE IN ('EQUITY','OPTION','STOCK','ASCOT','WARRNT','ADR','FUND','SWAP','FUTURE','ETF') OR (PRODUCT_TYPE_CODE='PREF' AND VERTICAL_SYSTEM NOT LIKE '%C1%') THEN 'EQUITY'                              WHEN CCC_DIVISION = 'MS PRINCIPAL INVESTING' OR CCC_BUSINESS_AREA IN ('MSPI INVESTING','PRINCIPAL INVESTING') OR (PRODUCT_TYPE_CODE = 'EQUITY' AND (CCC_BUSINESS_AREA IN ('CREDIT-CORPORATES','CREDIT CORPORATES PRIMARY','PROP WORKOUT','IRCC MANAGEMENT') OR CCC_DIVISION='INVESTMENTS')) THEN 'PRIVATE EQUITY OTHER'                               WHEN ((CCC_PRODUCT_LINE LIKE ('%CVA%') or CCC_STRATEGY LIKE ('%CVA%')) AND CCC_DIVISION NOT IN ('INT RATE CREDIT CURRENCY','FIXED INCOME DIVISION','INTEREST RATE CURRENCY GR') AND CCC_PRODUCT_LINE<>'COUNTERPARTY MANAGEMENT') OR CCC_PRODUCT_LINE IN ('MS CVA MNE - DERIVATIVES','MS CVA MNE DERIVS IRCC') OR CCC_STRATEGY IN ('MS CVA MPE - DERIVATIVES') THEN 'CVA OTHER'                               WHEN (CCC_PRODUCT_LINE LIKE ('%CVA%') or CCC_STRATEGY LIKE ('%CVA%')) AND (CCC_DIVISION IN ('INT RATE CREDIT CURRENCY','FIXED INCOME DIVISION','INTEREST RATE CURRENCY GR') OR CCC_PRODUCT_LINE='COUNTERPARTY MANAGEMENT') THEN 'CVA OTHER FID'                               WHEN CCC_PRODUCT_LINE LIKE ('%CVA%') OR CCC_STRATEGY LIKE ('%CVA%') OR CCC_BUSINESS_AREA LIKE ('%CVA%')  THEN 'CVA UNCAT.'                               WHEN (CCC_BUSINESS_AREA IN ('CREDIT-SECURITIZED PRODS','SECURITIZED PRODUCT GRP','SECURITIZED PRODUCTS GRP') AND CCC_PRODUCT_LINE in ('MANAGEMENT','SPG MANAGEMENT')) THEN 'EXCLUDED'                               WHEN CCC_BUSINESS_AREA='LENDING' AND (CCC_PRODUCT_LINE='PROJECT FINANCE' or ccc_strategy = 'PROJECT FINANCE') THEN 'EXCLUDED'                              WHEN ((VERTICAL_SYSTEM IN ('SPG_NY','SPG_LN','SPG_TK','MBS_NY','MUNI_NY') OR upper(SPG_DESC) LIKE '%ABS%' OR upper(SPG_DESC) LIKE '%CMBS%' OR upper(SPG_DESC) LIKE '%COLONNADE%' OR PRODUCT_TYPE_CODE LIKE 'ARS%' OR upper(SPG_DESC) LIKE '%RMBS%' OR upper(SPG_DESC) LIKE '%RPX%' OR upper(SPG_DESC) LIKE '%WAREHOUSE%' OR PRODUCT_TYPE_CODE='RPX') AND SPG_DESC NOT IN ('SWAP','RATE FUTURES','GOVERNMENT')) AND upper(SPG_DESC) NOT LIKE '%CORP%' AND PRODUCT_TYPE_CODE<>'MUNI' THEN 'SECURITIZED'                              WHEN CCC_BUSINESS_AREA IN ('STRUCTURED CREDIT PROD','CREDIT DERIVATIVE PROD', 'DSP - CREDIT') THEN 'CREDIT-CORP'                               WHEN FID1_SENIORITY IN ('SUBT1', 'SUBUT2') AND CCC_DIVISION IN ('INT RATE CREDIT CURRENCY','FIXED INCOME DIVISION') AND PRODUCT_TYPE_CODE IN ('BOND','PREF') AND CCC_STRATEGY<>'DISTRESSED TRADING1' THEN 'CREDIT-HY'                               WHEN BOOK IN ('JVMK2','JVPMK') THEN 'CREDIT-HY'                              WHEN CCC_BUSINESS_AREA='LENDING' AND BOOK LIKE '%WORKOUT%' THEN 'CREDIT-HY'                              WHEN CCC_BUSINESS_AREA='LENDING' AND (CCC_PRODUCT_LINE='HELD FOR INVESTMENT' or CCC_STRATEGY='HELD FOR INVESTMENT') THEN 'EXCLUDED'                              WHEN CCC_BUSINESS_AREA in ('CREDIT-CORPORATES','CREDIT CORPORATES PRIMARY') AND (CCC_PRODUCT_LINE IN ('NON INVSMT GRADE PRIMARY','NON IG PRIMARY - LOANS','NON IG PRIMARY - HY BOND', 'PRIMARY - LOANS') or ccc_strategy = 'NON IG PRIMARY - HY BOND') THEN 'EXCLUDED'                              WHEN CCC_BUSINESS_AREA IN('PROPRIETARY TRADING','PROPRIETARY TRADING1') OR CCC_PRODUCT_LINE IN ('PROP WORKOUT - CREDIT ARB','PROP WORKOUT - COURNOT','LEGACY CREDIT TRADING','COURNOT','CREDIT ARBITRAGE') OR CCC_STRATEGY IN ('PROP WORKOUT - CREDIT ARB','PROP WORKOUT - COURNOT','LEGACY CREDIT TRADING','COURNOT','CREDIT ARBITRAGE') OR (CCC_PRODUCT_LINE = 'CREDIT TRADING' AND CCC_BUSINESS_AREA = 'CREDIT PROPRIETARY TDG' AND CCC_PL_REPORTING_REGION = 'AMERICAS') OR BOOK IN ('CCINY','CFBND','CFPNY','SPAIR','PIVOL','PICOR') THEN 'CREDIT-CORP'                               WHEN PRODUCT_TYPE_CODE='CONVRT' AND (CCC_DIVISION IN ('COMMODITIES','INT RATE CREDIT CURRENCY','FIXED INCOME DIVISION','NON CORE','WW FID OTHER','FIC OTHER') OR CCC_PRODUCT_LINE IN ('CONVERTIBLE PRODUCTS') OR CCC_BUSINESS_AREA IN ('COMMODITIES')) AND CCC_PRODUCT_LINE NOT IN ('DISTRESSED TRADING','PAR LOANS TRADING') AND CCC_DIVISION NOT IN ('NON CORE') AND CCC_BUSINESS_AREA NOT IN  ('NON CORE') THEN 'CREDIT-CORP'                               WHEN CCC_STRATEGY='DISTRESSED TRADING1' AND PRODUCT_TYPE_CODE IN ('CDSOPTIDX','CRDINDEX','LOANINDEX','CRDBSKT') THEN 'CREDIT-CORP'                              WHEN (CCC_BUSINESS_AREA IN ('PROP WORKOUT') OR CCC_PRODUCT_LINE IN ('CONVERTIBLE TRADING SEC','EXCESS TRADING','FINANCING LOANS') OR CCC_STRATEGY IN ('DISTRESSED TRADING1','CONVERTIBLE TRADING SEC','EXCESS TRADING','FINANCING LOANS') OR ((CCC_PRODUCT_LINE IN ('PAR LOANS TRADING') or CCC_STRATEGY IN ('PAR LOANS TRADING','PRIVATE LOANS TRADING')) AND BOOK IN ('TRAZY')) OR BOOK IN ('SYNNY','SELNA') OR BOOK LIKE ('%EXCESS%') OR CCC_BUSINESS_AREA IN ('CONVERTIBLE TRADING SEC','LEVERAGED LOANS') OR (CCC_PRODUCT_LINE IN ('LEVERAGED CREDIT TRADING','LEVERAGED CREDIT TRADING1') AND CCC_STRATEGY <> 'NA HY TDG')) OR ((upper(SPG_DESC) LIKE '%CORPORATE CDO%'                                      OR upper(SPG_DESC) LIKE '%CORPORATE CLO%')) OR (upper(SPG_DESC) LIKE '%CORP%' AND RATING_GRADE_CD IN ('NR','NIG') AND (CCC_BUSINESS_AREA IN ('CREDIT-SECURITIZED PRODS','SECURITIZED PRODUCTS GRP','SECURITIZED PRODUCT GRP') OR CCC_PRODUCT_LINE LIKE 'CDO PRIMARY%' OR CCC_PRODUCT_LINE LIKE 'CLIENT NON RESI TRADING%' OR CCC_PRODUCT_LINE LIKE 'COMMERCIAL RE (PTG)%' OR CCC_PRODUCT_LINE LIKE 'MORTGAGE PROP TRADING%' OR CCC_STRATEGY LIKE 'MORTGAGE PROP TRADING%' OR CCC_PRODUCT_LINE LIKE '%GPCG%'                               OR CCC_PRODUCT_LINE LIKE 'PTG%' OR CCC_STRATEGY LIKE 'PTG%' OR CCC_PRODUCT_LINE LIKE 'RESI SEC%' OR CCC_PRODUCT_LINE LIKE 'SECURITIZED SEC%' OR CCC_DIVISION IN ('NON CORE') OR CCC_BUSINESS_AREA IN ('NON CORE'))) THEN 'CREDIT-HY'                               WHEN (CCC_PRODUCT_LINE IN ('PAR LOANS TRADING') or CCC_STRATEGY IN ('PAR LOANS TRADING','PRIVATE LOANS TRADING')) AND BOOK NOT IN ('TRAZY') THEN 'CREDIT-CORP'                                ELSE 'CREDIT-CORP'                     END ,                    CASE WHEN (A.SPG_DESC LIKE ('%COLONNADE%') OR A.SPG_DESC='OTHER CREDIT BASKET' AND A.BOOK IN ('COLONNADE')) OR A.BOOK='AEOLUS GPCG' THEN 'COLONNADE'                           WHEN SPG_DESC LIKE ('%CMBS%') THEN 'CMBS'                           WHEN SPG_DESC LIKE ('%RMBS%') OR SPG_DESC='RPX' OR PRODUCT_TYPE_CODE='RPX' THEN 'RESI'                           WHEN SPG_DESC LIKE ('ABS%') OR SPG_DESC IN ('OTHER CREDIT BASKET','OTHER LOANS') THEN 'ABS'                           WHEN PRODUCT_TYPE_CODE='MUNI' THEN 'OTHER'                           ELSE 'OTHER'                    END,           case when a.cob_date = '2018-02-28' then 1                           else 0                     end ) , rolledup as ( select A.*     from (     select             coalesce(CASE WHEN (CCC_BUSINESS_AREA IN ('CPM TRADING (MPE)',                                              'Credit',                                              'MS CVA MNE - COMMOD',                                             'MS CVA MNE - IRCC')                     OR CCC_PRODUCT_LINE IN ('MS CVA MPE - DERIVATIVES',                                             'MS CVA MPE DERIVS CPM'))                    THEN 'CVA'                    Else 'Non-CVA'              END, 'Total') AS LOCAL_FLAG,            coalesce(CCC_DIVISION, '(blank)') as CCC_DIVISION,            coalesce(CCC_BUSINESS_AREA, '(blank)') as CCC_BUSINESS_AREA,            coalesce(CCC_STRATEGY, '(blank)') as CCC_STRATEGY,            sum(case when is_cob = 1 then coalesce(usd_pv01, 0) else 0 end) as usd_pv01_cob,            sum(case when is_cob = 1 then coalesce(usd_pv01, 0) else -coalesce(usd_pv01, 0)  end) as usd_pv01_change,             sum(case when is_cob = 1 then coalesce(usd_fx, 0) else 0 end) as usd_fx_cob,            sum(case when is_cob = 1 then coalesce(usd_fx, 0) else -coalesce(usd_fx, 0)  end) as usd_fx_change,             sum(case when is_cob = 1 then coalesce(cm_delta, 0) else 0 end) as cm_delta_cob,            sum(case when is_cob = 1 then coalesce(cm_delta, 0) else -coalesce(cm_delta, 0)  end) as cm_delta_change,             sum(case when is_cob = 1 then coalesce(NRAMV, 0) else 0 end) as NRAMV_cob,            sum(case when is_cob = 1 then coalesce(NRAMV, 0) else -coalesce(NRAMV, 0)  end) as NRAMV_change,             sum(case when is_cob = 1 then coalesce(usd_kappa, 0) else 0 end) as usd_kappa_cob,            sum(case when is_cob = 1 then coalesce(usd_kappa, 0) else -coalesce(usd_kappa, 0) end) as usd_kappa_change,            sum(case when is_cob = 1 then coalesce(usd_fx_kappa, 0) else 0 end) as usd_fx_kappa_cob,            sum(case when is_cob = 1 then coalesce(usd_fx_kappa, 0) else -coalesce(usd_fx_kappa, 0)  end) as usd_fx_kappa_change,             sum(case when is_cob = 1 then coalesce(usd_cm_kappa, 0) else 0 end) as usd_cm_kappa_cob,            sum(case when is_cob = 1 then coalesce(usd_cm_kappa, 0) else -coalesce(usd_cm_kappa, 0)  end) as usd_cm_kappa_change,             sum(case when is_cob = 1 then coalesce(usd_eq_kappa, 0) else 0 end) as usd_eq_kappa_cob,            sum(case when is_cob = 1 then coalesce(usd_eq_kappa, 0) else -coalesce(usd_eq_kappa, 0)  end) as usd_eq_kappa_change,             sum(case when is_cob = 1 then coalesce(usd_ir_gamma, 0) else 0 end) as usd_ir_gamma_cob,            sum(case when is_cob = 1 then coalesce(usd_ir_gamma, 0) else -coalesce(usd_ir_gamma, 0)  end) as usd_ir_gamma_change,            sum(case when is_cob = 1 then coalesce(usd_pv01sprd, 0) else 0 end) as usd_pv01sprd_cob,            sum(case when is_cob = 1 then coalesce(usd_pv01sprd, 0) else -coalesce(usd_pv01sprd, 0)  end) as usd_pv01sprd_change,             sum(case when is_cob = 1 then coalesce(usd_cr_kappa, 0) else 0 end) as usd_cr_kappa_cob,            sum(case when is_cob = 1 then coalesce(usd_cr_kappa, 0) else -coalesce(usd_cr_kappa, 0)  end) as usd_cr_kappa_change,             sum(case when is_cob = 1 then coalesce(usd_sev01, 0) else 0 end) as usd_sev01_cob,            sum(case when is_cob = 1 then coalesce(usd_sev01, 0) else -coalesce(usd_sev01, 0)  end) as usd_sev01_change,             sum(case when is_cob = 1 then coalesce(usd_pv10_bench, 0) else 0 end) as usd_pv10_bench_cob,            sum(case when is_cob = 1 then coalesce(usd_pv10_bench, 0) else -coalesce(usd_pv10_bench, 0)  end) as usd_pv10_bench_change,             sum(case when CREDIT_TYPE_FLAG='CREDIT-HY'                             and is_cob = 1                       then coalesce(USD_NET_EXPOSURE, 0)                       else 0 end) as CREDIT_HY_COB,            sum(case when CREDIT_TYPE_FLAG='CREDIT-HY'                             and is_cob = 1                       then coalesce(USD_NET_EXPOSURE, 0)                       when CREDIT_TYPE_FLAG='CREDIT-HY'                             and is_cob = 0                       then -coalesce(USD_NET_EXPOSURE, 0)                       else 0 end) as CREDIT_HY_CHANGE,                                   sum(case when CREDIT_TYPE_FLAG='EMERGING MARKETS'                             and is_cob = 1                       then coalesce(USD_NET_EXPOSURE, 0)                       else 0 end) as CREDIT_EM_COB,                                   sum(case when CREDIT_TYPE_FLAG='EMERGING MARKETS'                             and is_cob = 1                       then coalesce(USD_NET_EXPOSURE, 0)                       when CREDIT_TYPE_FLAG='EMERGING MARKETS'                             and is_cob = 0                       then -coalesce(USD_NET_EXPOSURE, 0)                       else 0 end) as CREDIT_EM_CHANGE,                                    sum(case when CREDIT_TYPE_FLAG='SECURITIZED'                             and SECURITIZED_CATEGORY='RESI'                              and is_cob = 1                       then coalesce(USD_NET_EXPOSURE, 0)                       else 0 end) as SECU_RESI_COB,                                   sum(case when CREDIT_TYPE_FLAG='SECURITIZED'                             and SECURITIZED_CATEGORY='RESI'                               and is_cob = 1                       then coalesce(USD_NET_EXPOSURE, 0)                       when CREDIT_TYPE_FLAG='SECURITIZED'                             and SECURITIZED_CATEGORY='RESI'                               and is_cob = 0                       then -coalesce(USD_NET_EXPOSURE, 0)                       else 0 end) as SECU_RESI_CHANGE,                        sum(case when CREDIT_TYPE_FLAG='SECURITIZED'                             and SECURITIZED_CATEGORY='CMBS'                              and is_cob = 1                       then coalesce(USD_NET_EXPOSURE, 0)                       else 0 end) as SECU_CMBS_COB,                                   sum(case when CREDIT_TYPE_FLAG='SECURITIZED'                             and SECURITIZED_CATEGORY='CMBS'                               and is_cob = 1                       then coalesce(USD_NET_EXPOSURE, 0)                       when CREDIT_TYPE_FLAG='SECURITIZED'                             and SECURITIZED_CATEGORY='CMBS'                               and is_cob = 0                       then -coalesce(USD_NET_EXPOSURE, 0)                       else 0 end) as SECU_CMBS_CHANGE,                                   sum(case when CREDIT_TYPE_FLAG='SECURITIZED'                             and SECURITIZED_CATEGORY='ABS'                              and is_cob = 1                       then coalesce(USD_NET_EXPOSURE, 0)                       else 0 end) as SECU_ABS_COB,                                   sum(case when CREDIT_TYPE_FLAG='SECURITIZED'                             and SECURITIZED_CATEGORY='ABS'                               and is_cob = 1                       then coalesce(USD_NET_EXPOSURE, 0)                       when CREDIT_TYPE_FLAG='SECURITIZED'                             and SECURITIZED_CATEGORY='ABS'                               and is_cob = 0                       then -coalesce(USD_NET_EXPOSURE, 0)                       else 0 end) as SECU_ABS_CHANGE                              from src              group by rollup(            CASE WHEN (CCC_BUSINESS_AREA IN ('CPM TRADING (MPE)',                                              'Credit',                                              'MS CVA MNE - COMMOD',                                             'MS CVA MNE - IRCC')                     OR CCC_PRODUCT_LINE IN ('MS CVA MPE - DERIVATIVES',                                             'MS CVA MPE DERIVS CPM'))                    THEN 'CVA'                    Else 'Non-CVA'              END,            CCC_DIVISION,            CCC_BUSINESS_AREA,            CCC_STRATEGY             )               ) A     where abs(A.usd_pv01_cob) + abs(A.usd_pv01_change) + abs(A.usd_fx_cob) + abs(A.usd_fx_change) + abs(A.cm_delta_cob) + abs(A.cm_delta_change) + abs(A.NRAMV_cob) + abs(A.NRAMV_change) + abs(A.usd_kappa_cob) + abs(A.usd_kappa_change) +               abs(A.usd_fx_kappa_cob) + abs(A.usd_fx_kappa_change) + abs(A.usd_cm_kappa_cob) + abs(A.usd_cm_kappa_change) + abs(A.usd_eq_kappa_cob) + abs(A.usd_eq_kappa_change) + abs(A.usd_ir_gamma_cob) + abs(A.usd_ir_gamma_change) + abs(A.usd_pv01sprd_cob) + abs(A.usd_pv01sprd_change) + abs(A.usd_cr_kappa_cob) + abs(A.usd_cr_kappa_change) + abs(A.usd_sev01_cob) + abs(A.usd_sev01_change) + abs(A.usd_pv10_bench_cob) + abs(A.usd_pv10_bench_change) +               abs(A.CREDIT_HY_COB) + abs(A.CREDIT_HY_CHANGE) + abs(A.CREDIT_EM_COB) + abs(A.CREDIT_EM_CHANGE) + abs(A.SECU_RESI_COB) + abs(A.SECU_RESI_CHANGE) + abs(A.SECU_CMBS_COB) + abs(A.SECU_CMBS_CHANGE) + abs(A.SECU_ABS_COB) + abs(A.SECU_ABS_CHANGE) <> 0 ) , not_rolledup as (        select A.*          from (      select             coalesce(CASE WHEN (CCC_BUSINESS_AREA IN ('CPM TRADING (MPE)',                                              'Credit',                                              'MS CVA MNE - COMMOD',                                             'MS CVA MNE - IRCC')                     OR CCC_PRODUCT_LINE IN ('MS CVA MPE - DERIVATIVES',                                             'MS CVA MPE DERIVS CPM'))                    THEN 'CVA'                    Else 'Non-CVA'              END, 'Total') AS LOCAL_FLAG,            coalesce(CCC_DIVISION, '(blank)') as CCC_DIVISION,            coalesce(CCC_BUSINESS_AREA, '(blank)') as CCC_BUSINESS_AREA,            coalesce(CCC_STRATEGY, '(blank)') as CCC_STRATEGY,    sum(case when is_cob = 1 then coalesce(usd_pv01, 0) else 0 end) as usd_pv01_cob,            sum(case when is_cob = 1 then coalesce(usd_pv01, 0) else -coalesce(usd_pv01, 0)  end) as usd_pv01_change,                         sum(case when is_cob = 1 then coalesce(usd_fx, 0) else 0 end) as usd_fx_cob,            sum(case when is_cob = 1 then coalesce(usd_fx, 0) else -coalesce(usd_fx, 0)  end) as usd_fx_change,                         sum(case when is_cob = 1 then coalesce(cm_delta, 0) else 0 end) as cm_delta_cob,            sum(case when is_cob = 1 then coalesce(cm_delta, 0) else -coalesce(cm_delta, 0)  end) as cm_delta_change,                         sum(case when is_cob = 1 then coalesce(NRAMV, 0) else 0 end) as NRAMV_cob,            sum(case when is_cob = 1 then coalesce(NRAMV, 0) else -coalesce(NRAMV, 0)  end) as NRAMV_change,                         sum(case when is_cob = 1 then coalesce(usd_kappa, 0) else 0 end) as usd_kappa_cob,            sum(case when is_cob = 1 then coalesce(usd_kappa, 0) else -coalesce(usd_kappa, 0) end) as usd_kappa_change,                        sum(case when is_cob = 1 then coalesce(usd_fx_kappa, 0) else 0 end) as usd_fx_kappa_cob,            sum(case when is_cob = 1 then coalesce(usd_fx_kappa, 0) else -coalesce(usd_fx_kappa, 0)  end) as usd_fx_kappa_change,                         sum(case when is_cob = 1 then coalesce(usd_cm_kappa, 0) else 0 end) as usd_cm_kappa_cob,            sum(case when is_cob = 1 then coalesce(usd_cm_kappa, 0) else -coalesce(usd_cm_kappa, 0)  end) as usd_cm_kappa_change,                         sum(case when is_cob = 1 then coalesce(usd_eq_kappa, 0) else 0 end) as usd_eq_kappa_cob,            sum(case when is_cob = 1 then coalesce(usd_eq_kappa, 0) else -coalesce(usd_eq_kappa, 0)  end) as usd_eq_kappa_change,                         sum(case when is_cob = 1 then coalesce(usd_ir_gamma, 0) else 0 end) as usd_ir_gamma_cob,            sum(case when is_cob = 1 then coalesce(usd_ir_gamma, 0) else -coalesce(usd_ir_gamma, 0)  end) as usd_ir_gamma_change,                        sum(case when is_cob = 1 then coalesce(usd_pv01sprd, 0) else 0 end) as usd_pv01sprd_cob,            sum(case when is_cob = 1 then coalesce(usd_pv01sprd, 0) else -coalesce(usd_pv01sprd, 0)  end) as usd_pv01sprd_change,                         sum(case when is_cob = 1 then coalesce(usd_cr_kappa, 0) else 0 end) as usd_cr_kappa_cob,            sum(case when is_cob = 1 then coalesce(usd_cr_kappa, 0) else -coalesce(usd_cr_kappa, 0)  end) as usd_cr_kappa_change,                         sum(case when is_cob = 1 then coalesce(usd_sev01, 0) else 0 end) as usd_sev01_cob,            sum(case when is_cob = 1 then coalesce(usd_sev01, 0) else -coalesce(usd_sev01, 0)  end) as usd_sev01_change,                         sum(case when is_cob = 1 then coalesce(usd_pv10_bench, 0) else 0 end) as usd_pv10_bench_cob,            sum(case when is_cob = 1 then coalesce(usd_pv10_bench, 0) else -coalesce(usd_pv10_bench, 0)  end) as usd_pv10_bench_change,                         sum(case when CREDIT_TYPE_FLAG='CREDIT-HY'                             and is_cob = 1                       then coalesce(USD_NET_EXPOSURE, 0)                       else 0 end) as CREDIT_HY_COB,                                   sum(case when CREDIT_TYPE_FLAG='CREDIT-HY'                             and is_cob = 1                       then coalesce(USD_NET_EXPOSURE, 0)                       when CREDIT_TYPE_FLAG='CREDIT-HY'                             and is_cob = 0                       then -coalesce(USD_NET_EXPOSURE, 0)                       else 0 end) as CREDIT_HY_CHANGE,                                   sum(case when CREDIT_TYPE_FLAG='EMERGING MARKETS'                             and is_cob = 1                       then coalesce(USD_NET_EXPOSURE, 0)                       else 0 end) as CREDIT_EM_COB,                                   sum(case when CREDIT_TYPE_FLAG='EMERGING MARKETS'                             and is_cob = 1                       then coalesce(USD_NET_EXPOSURE, 0)                       when CREDIT_TYPE_FLAG='EMERGING MARKETS'                             and is_cob = 0                       then -coalesce(USD_NET_EXPOSURE, 0)                       else 0 end) as CREDIT_EM_CHANGE,                                    sum(case when CREDIT_TYPE_FLAG='SECURITIZED'                             and SECURITIZED_CATEGORY='RESI'                              and is_cob = 1                       then coalesce(USD_NET_EXPOSURE, 0)                       else 0 end) as SECU_RESI_COB,                                   sum(case when CREDIT_TYPE_FLAG='SECURITIZED'                             and SECURITIZED_CATEGORY='RESI'                               and is_cob = 1                       then coalesce(USD_NET_EXPOSURE, 0)                       when CREDIT_TYPE_FLAG='SECURITIZED'                             and SECURITIZED_CATEGORY='RESI'                               and is_cob = 0                       then -coalesce(USD_NET_EXPOSURE, 0)                       else 0 end) as SECU_RESI_CHANGE,                        sum(case when CREDIT_TYPE_FLAG='SECURITIZED'                             and SECURITIZED_CATEGORY='CMBS'                              and is_cob = 1                       then coalesce(USD_NET_EXPOSURE, 0)                       else 0 end) as SECU_CMBS_COB,                                   sum(case when CREDIT_TYPE_FLAG='SECURITIZED'                             and SECURITIZED_CATEGORY='CMBS'                               and is_cob = 1                       then coalesce(USD_NET_EXPOSURE, 0)                       when CREDIT_TYPE_FLAG='SECURITIZED'                             and SECURITIZED_CATEGORY='CMBS'                               and is_cob = 0                       then -coalesce(USD_NET_EXPOSURE, 0)                       else 0 end) as SECU_CMBS_CHANGE,                                   sum(case when CREDIT_TYPE_FLAG='SECURITIZED'                             and SECURITIZED_CATEGORY='ABS'                              and is_cob = 1                       then coalesce(USD_NET_EXPOSURE, 0)                       else 0 end) as SECU_ABS_COB,                                   sum(case when CREDIT_TYPE_FLAG='SECURITIZED'                             and SECURITIZED_CATEGORY='ABS'                               and is_cob = 1                       then coalesce(USD_NET_EXPOSURE, 0)                       when CREDIT_TYPE_FLAG='SECURITIZED'                             and SECURITIZED_CATEGORY='ABS'                               and is_cob = 0                       then -coalesce(USD_NET_EXPOSURE, 0)                       else 0 end) as SECU_ABS_CHANGE                              from src      group by            CASE WHEN (CCC_BUSINESS_AREA IN ('CPM TRADING (MPE)',                                              'Credit',                                              'MS CVA MNE - COMMOD',                                             'MS CVA MNE - IRCC')                     OR CCC_PRODUCT_LINE IN ('MS CVA MPE - DERIVATIVES',                                             'MS CVA MPE DERIVS CPM'))                    THEN 'CVA'                    Else 'Non-CVA'              END,            CCC_DIVISION,            CCC_BUSINESS_AREA,            CCC_STRATEGY     )a   where abs(A.usd_pv01_cob) + abs(A.usd_pv01_change) + abs(A.usd_fx_cob) + abs(A.usd_fx_change) + abs(A.cm_delta_cob) + abs(A.cm_delta_change) + abs(A.NRAMV_cob) + abs(A.NRAMV_change) + abs(A.usd_kappa_cob) + abs(A.usd_kappa_change) +               abs(A.usd_fx_kappa_cob) + abs(A.usd_fx_kappa_change) + abs(A.usd_cm_kappa_cob) + abs(A.usd_cm_kappa_change) + abs(A.usd_eq_kappa_cob) + abs(A.usd_eq_kappa_change) + abs(A.usd_ir_gamma_cob) + abs(A.usd_ir_gamma_change) + abs(A.usd_pv01sprd_cob) + abs(A.usd_pv01sprd_change) + abs(A.usd_cr_kappa_cob) + abs(A.usd_cr_kappa_change) + abs(A.usd_sev01_cob) + abs(A.usd_sev01_change) + abs(A.usd_pv10_bench_cob) + abs(A.usd_pv10_bench_change) +               abs(A.CREDIT_HY_COB) + abs(A.CREDIT_HY_CHANGE) + abs(A.CREDIT_EM_COB) + abs(A.CREDIT_EM_CHANGE) + abs(A.SECU_RESI_COB) + abs(A.SECU_RESI_CHANGE) + abs(A.SECU_CMBS_COB) + abs(A.SECU_CMBS_CHANGE) + abs(A.SECU_ABS_COB) + abs(A.SECU_ABS_CHANGE) <> 0 ), flags as ( select local_flag,ccc_division,ccc_business_area, case when local_flag_cnt=1 then 'NOT_SHOWN' else 'SHOWN' end is_shown_local ,case when ccc_division_cnt=1 then 'NOT_SHOWN' else 'SHOWN' end is_shown_div ,case when ccc_business_area_cnt=1 then 'NOT_SHOWN' else 'SHOWN' end is_shown_bus from ( select local_flag,ccc_division,ccc_business_area, count(distinct ccc_division) over (partition by local_flag) as local_flag_cnt ,count(distinct ccc_business_area) over (partition by local_flag,ccc_division) as ccc_division_cnt ,count(distinct ccc_strategy) over (partition by local_flag,ccc_division,ccc_business_area) as ccc_business_area_cnt from (select local_flag,ccc_division,ccc_business_area ,ccc_strategy from not_rolledup group by 1,2,3,4 )a )a group by local_flag,ccc_division,ccc_business_area, case when local_flag_cnt=1 then 'NOT_SHOWN' else 'SHOWN' end   ,case when ccc_division_cnt=1 then 'NOT_SHOWN' else 'SHOWN' end   ,case when ccc_business_area_cnt=1 then 'NOT_SHOWN' else 'SHOWN' end   ) ,  only_needed_rows as (  select rolledup.* from ( select rolledup.* from ( select rolledup.* from ( select rolledup.* from rolledup,flags where rolledup.local_flag = flags.local_flag and (rolledup.ccc_division <> '(blank)' or flags.is_shown_local = 'SHOWN')  or rolledup.local_flag = 'Total' or rolledup.ccc_division = '(blank)' )rolledup,flags where rolledup.local_flag = flags.local_flag and rolledup.ccc_division = flags.ccc_division  and (rolledup.ccc_business_area <> '(blank)' or flags.is_shown_div = 'SHOWN') or rolledup.ccc_division = '(blank)' ) rolledup,flags  where rolledup.local_flag = flags.local_flag  and rolledup.ccc_division = flags.ccc_division and rolledup.ccc_business_area = flags.ccc_business_area  and (rolledup.ccc_strategy <> '(blank)' or flags.is_shown_bus = 'SHOWN') or rolledup.ccc_business_area = '(blank)' ) as rolledup group by rolledup.local_flag,rolledup.CCC_DIVISION,rolledup.CCC_BUSINESS_AREA,rolledup.CCC_STRATEGY,rolledup.USD_PV01_COB,rolledup.USD_PV01_CHANGE,rolledup.USD_FX_COB,rolledup.USD_FX_CHANGE, rolledup.CM_DELTA_COB,rolledup.CM_DELTA_CHANGE,rolledup.NRAMV_COB,rolledup.NRAMV_CHANGE,rolledup.USD_KAPPA_COB,rolledup.USD_KAPPA_CHANGE,rolledup.USD_FX_KAPPA_COB,rolledup.USD_FX_KAPPA_CHANGE, rolledup.USD_CM_KAPPA_COB,rolledup.USD_CM_KAPPA_CHANGE,rolledup.USD_EQ_KAPPA_COB,rolledup.USD_EQ_KAPPA_CHANGE,rolledup.USD_IR_GAMMA_COB,rolledup.USD_IR_GAMMA_CHANGE, rolledup.USD_PV01SPRD_COB,rolledup.USD_PV01SPRD_CHANGE,rolledup.USD_CR_KAPPA_COB,rolledup.USD_CR_KAPPA_CHANGE,rolledup.USD_SEV01_COB,rolledup.USD_SEV01_CHANGE,rolledup.USD_PV10_BENCH_COB ,rolledup.USD_PV10_BENCH_CHANGE,rolledup.CREDIT_HY_COB,rolledup.CREDIT_HY_CHANGE,rolledup.CREDIT_EM_COB,rolledup.CREDIT_EM_CHANGE,rolledup.SECU_RESI_COB, rolledup.SECU_RESI_CHANGE,rolledup.SECU_CMBS_COB,rolledup.SECU_CMBS_CHANGE,rolledup.SECU_ABS_COB,rolledup.SECU_ABS_CHANGE   )     select case when rownum <= 73 then 0                     else 1              end as shown,  only_needed_rows.local_flag,only_needed_rows.CCC_DIVISION,only_needed_rows.CCC_BUSINESS_AREA,only_needed_rows.CCC_STRATEGY,only_needed_rows.USD_PV01_COB,only_needed_rows.USD_PV01_CHANGE,only_needed_rows.USD_FX_COB,only_needed_rows.USD_FX_CHANGE, only_needed_rows.CM_DELTA_COB,only_needed_rows.CM_DELTA_CHANGE,only_needed_rows.NRAMV_COB,only_needed_rows.NRAMV_CHANGE,only_needed_rows.USD_KAPPA_COB,only_needed_rows.USD_KAPPA_CHANGE,only_needed_rows.USD_FX_KAPPA_COB,only_needed_rows.USD_FX_KAPPA_CHANGE, only_needed_rows.USD_CM_KAPPA_COB,only_needed_rows.USD_CM_KAPPA_CHANGE,only_needed_rows.USD_EQ_KAPPA_COB,only_needed_rows.USD_EQ_KAPPA_CHANGE,only_needed_rows.USD_IR_GAMMA_COB,only_needed_rows.USD_IR_GAMMA_CHANGE, only_needed_rows.USD_PV01SPRD_COB,only_needed_rows.USD_PV01SPRD_CHANGE,only_needed_rows.USD_CR_KAPPA_COB,only_needed_rows.USD_CR_KAPPA_CHANGE,only_needed_rows.USD_SEV01_COB,only_needed_rows.USD_SEV01_CHANGE,only_needed_rows.USD_PV10_BENCH_COB ,only_needed_rows.USD_PV10_BENCH_CHANGE,only_needed_rows.CREDIT_HY_COB,only_needed_rows.CREDIT_HY_CHANGE,only_needed_rows.CREDIT_EM_COB,only_needed_rows.CREDIT_EM_CHANGE,only_needed_rows.SECU_RESI_COB, only_needed_rows.SECU_RESI_CHANGE,only_needed_rows.SECU_CMBS_COB,only_needed_rows.SECU_CMBS_CHANGE,only_needed_rows.SECU_ABS_COB,only_needed_rows.SECU_ABS_CHANGE      from (              select  row_number() over (order by case when local_flag = 'CVA' then 0 else 1 end, case when ccc_business_area = '(blank)' then 0 else 1 end, (abs(usd_pv01_cob) + abs(usd_fx_cob) + abs(cm_delta_cob) + abs(NRAMV_cob) + abs(usd_kappa_cob) + abs(usd_fx_kappa_cob) + abs(usd_cm_kappa_cob) + abs(usd_eq_kappa_cob) + abs(usd_ir_gamma_cob) +                      abs(usd_pv01sprd_cob) + abs(usd_cr_kappa_cob) + abs(usd_sev01_cob) + abs(usd_pv10_bench_cob) + abs(CREDIT_HY_COB) + abs(CREDIT_EM_COB) + abs(SECU_RESI_COB) + abs(SECU_CMBS_COB) + abs(SECU_ABS_COB)) / 18 desc) rownum,          only_needed_rows.local_flag,only_needed_rows.CCC_DIVISION,only_needed_rows.CCC_BUSINESS_AREA,only_needed_rows.CCC_STRATEGY,only_needed_rows.USD_PV01_COB,only_needed_rows.USD_PV01_CHANGE,only_needed_rows.USD_FX_COB,only_needed_rows.USD_FX_CHANGE, only_needed_rows.CM_DELTA_COB,only_needed_rows.CM_DELTA_CHANGE,only_needed_rows.NRAMV_COB,only_needed_rows.NRAMV_CHANGE,only_needed_rows.USD_KAPPA_COB,only_needed_rows.USD_KAPPA_CHANGE,only_needed_rows.USD_FX_KAPPA_COB,only_needed_rows.USD_FX_KAPPA_CHANGE, only_needed_rows.USD_CM_KAPPA_COB,only_needed_rows.USD_CM_KAPPA_CHANGE,only_needed_rows.USD_EQ_KAPPA_COB,only_needed_rows.USD_EQ_KAPPA_CHANGE,only_needed_rows.USD_IR_GAMMA_COB,only_needed_rows.USD_IR_GAMMA_CHANGE, only_needed_rows.USD_PV01SPRD_COB,only_needed_rows.USD_PV01SPRD_CHANGE,only_needed_rows.USD_CR_KAPPA_COB,only_needed_rows.USD_CR_KAPPA_CHANGE,only_needed_rows.USD_SEV01_COB,only_needed_rows.USD_SEV01_CHANGE,only_needed_rows.USD_PV10_BENCH_COB ,only_needed_rows.USD_PV10_BENCH_CHANGE,only_needed_rows.CREDIT_HY_COB,only_needed_rows.CREDIT_HY_CHANGE,only_needed_rows.CREDIT_EM_COB,only_needed_rows.CREDIT_EM_CHANGE,only_needed_rows.SECU_RESI_COB, only_needed_rows.SECU_RESI_CHANGE,only_needed_rows.SECU_CMBS_COB,only_needed_rows.SECU_CMBS_CHANGE,only_needed_rows.SECU_ABS_COB,only_needed_rows.SECU_ABS_CHANGE      from only_needed_rows )only_needed_rows order by only_needed_rows.local_flag, only_needed_rows.ccc_division, only_needed_rows.ccc_business_area, only_needed_rows.ccc_strategy