WITH LENDING AS ( SELECT COB_DATE, CCC_STRATEGY, CCC_BUSINESS_AREA,book, PRODUCT_TYPE_CODE, a.TAPSCUSIP,a.TICKET, CASE WHEN (UPPER(A.BOOK) LIKE '%WORKOUT%') OR A.BOOK in ('PMGPB','EVREU') THEN 'DISTRESSED' WHEN (A.CCC_STRATEGY = 'NON IG PRIMARY - LOANS' OR A.CCC_PRODUCT_LINE IN ('NON IG PRIMARY - LOANS','PRIMARY - LOANS')) AND (A.BOOK LIKE '%ELTH FVO%' OR A.BOOK LIKE '%ELTH HFS%') THEN 'UNHEDGEABLES' WHEN (A.CCC_STRATEGY IN ('HELD FOR SALE', 'HELD FOR SALE IMD', 'RELATIONSHIP TDG UNHEDGBL') OR A.CCC_PRODUCT_LINE IN ('HELD FOR SALE', 'HELD FOR SALE IMD', 'RELATIONSHIP TDG UNHEDGBL')) AND (UPPER(A.BOOK) NOT LIKE '%-HEDGEABLE-%') THEN 'UNHEDGEABLES' WHEN (A.CCC_STRATEGY IN ('HELD FOR SALE', 'HELD FOR SALE IMD', 'HFI HEDGING', 'HFS HEDGING', 'RELATIONSHIP IMD', 'RELATIONSHIP TRADING') OR A.CCC_PRODUCT_LINE IN ('HELD FOR SALE', 'HELD FOR SALE IMD', 'HFI HEDGING', 'HFS HEDGING', 'RELATIONSHIP IMD', 'RELATIONSHIP TRADING')) AND (UPPER(A.BOOK) NOT LIKE '%-UNHEDGEABLE-%') THEN 'HEDGEABLES' ELSE 'OTHER' END AS LIMIT_DEFINITION, CASE WHEN A.PRODUCT_TYPE_CODE IN ('CRDINDEX','DEFSWAP','CDSOPTIDX','LOANCDS','LOANINDEX') THEN 'HEDGES' WHEN A.PRODUCT_TYPE_CODE IN ('BANKDEBT','TRRSWAP','BOND') THEN 'LOANS' ELSE 'OTHER' END AS LOANS_HEDGES, sum((A.USD_NOTIONAL) :: numeric(15,5)) AS NOTIONAL, sum(CASE WHEN ((a.USD_NOTIONAL) :: numeric(15,5)) >= 0 THEN ((a.USD_NOTIONAL) :: numeric(15,5)) ELSE 0 END) AS GROSS_LONG_NOTIONAL, sum(CASE WHEN ((a.USD_NOTIONAL) :: numeric(15,5)) < 0 THEN ((a.USD_NOTIONAL) :: numeric(15,5)) ELSE 0 END) AS GROSS_SHORT_NOTIONAL, sum((a.USD_PV01) :: numeric(15,5)) as USD_PV01, sum((a.USD_PV01SPRD) :: numeric(15,5)) as USD_PV01SPRD, sum(CASE WHEN ((a.USD_PV01SPRD) :: numeric(15,5)) >= 0 THEN ((a.USD_PV01SPRD) :: numeric(15,5))ELSE 0 END) AS GROSS_SHORT_PV01SPRD, sum(CASE WHEN ((a.USD_PV01SPRD) :: numeric(15,5)) < 0 THEN ((a.USD_PV01SPRD) :: numeric(15,5)) ELSE 0 END) AS GROSS_LONG_PV01SPRD, SUM( CASE WHEN A.PRODUCT_TYPE_CODE NOT IN ('CRDINDEX','CDSOPTIDX','LOANINDEX','CRDBSKT') THEN ((a.USD_PV10_BENCH) :: numeric(15,5)) ELSE ((a.USD_PV10_BENCH_COMP) :: numeric(15,5)) END)AS PV10, sum(CASE WHEN (A.PRODUCT_TYPE_CODE NOT IN ('CRDINDEX','CDSOPTIDX','LOANINDEX','CRDBSKT') and ((a.USD_PV10_BENCH) :: numeric(15,5)) >= 0) THEN ((a.USD_PV10_BENCH) :: numeric(15,5)) WHEN (A.PRODUCT_TYPE_CODE IN ('CRDINDEX','CDSOPTIDX','LOANINDEX','CRDBSKT') and ((a.USD_PV10_BENCH_COMP) :: numeric(15,5)) >= 0) THEN ((a.USD_PV10_BENCH_COMP) :: numeric(15,5)) ELSE 0 END) AS GROSS_SHORT_PV10, sum(CASE WHEN (A.PRODUCT_TYPE_CODE NOT IN ('CRDINDEX','CDSOPTIDX','LOANINDEX','CRDBSKT') and ((a.USD_PV10_BENCH) :: numeric(15,5)) < 0) THEN ((a.USD_PV10_BENCH) :: numeric(15,5)) WHEN (A.PRODUCT_TYPE_CODE IN ('CRDINDEX','CDSOPTIDX','LOANINDEX','CRDBSKT') and ((a.USD_PV10_BENCH_COMP) :: numeric(15,5)) < 0) THEN ((a.USD_PV10_BENCH_COMP) :: numeric(15,5)) ELSE 0 END) AS GROSS_LONG_PV10, SUM( CASE WHEN A.PRODUCT_TYPE_CODE NOT IN ('CRDINDEX','CDSOPTIDX','LOANINDEX','CRDBSKT') THEN (CASE WHEN (((A.SLIDE_PV_PLS_50PCT_USD) :: numeric(15,5)) is null or ((A.SLIDE_PV_PLS_50PCT_USD) :: numeric(15,5)) =0) then ((A.USD_CREDIT_PV10PCT) :: numeric(15,5))*5 else ((A.SLIDE_PV_PLS_50PCT_USD) :: numeric(15,5)) END) ELSE (CASE WHEN (((A.SLIDE_PVSPRCOMP_PLS_50PCT_USD) :: numeric(15,5)) is null or ((A.SLIDE_PVSPRCOMP_PLS_50PCT_USD) :: numeric(15,5))=0) then ((A.USD_CREDIT_PV10PCT) :: numeric(15,5))*5 else ((A.SLIDE_PVSPRCOMP_PLS_50PCT_USD) :: numeric(15,5)) END) END )AS PV50 FROM CDWUSER.U_EXP_MSR A WHERE a.COB_DATE in ( '2018-02-28' ) AND (A.CCC_BUSINESS_AREA = 'LENDING' OR (A.CCC_STRATEGY IN ('NON IG PRIMARY - LOANS') OR A.CCC_PRODUCT_LINE IN ('NON IG PRIMARY - LOANS','PRIMARY - LOANS'))) and A.vertical_system not like 'PIPELINE%' and a.CCC_GL_COMPANY_CODE = '1633' group by a.COB_DATE, a.CCC_STRATEGY, a.TAPSCUSIP,a.TICKET, a.CCC_PRODUCT_LINE, a.CCC_BUSINESS_AREA,a.book, A.PRODUCT_TYPE_CODE,MRD_ASSET_CLASS, MRD_RATING, CCC_GL_COMPANY_CODE ) select a.*, case when a.PV50>=0 then a.PV50 else 0 end as GROSS_SHORT_PV50, case when a.PV50<0 then a.PV50 else 0 end as GROSS_LONG_PV50 from LENDING a