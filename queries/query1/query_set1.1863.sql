WITH DECOMP AS( SELECT d.COB_DATE ,d.ISSUER_COUNTRY_CODE_DECOMP AS COUNTRY ,d.CCC_PL_REPORTING_REGION ,d.LE_GROUP ,d.PRODUCT_WEIGHT_DECOMP AS WEIGHT ,d.PROCESS_ID ,d.POSITION_ID FROM cdwuser.U_DECOMP_MSR d WHERE d.COB_DATE IN('2018-02-28', '2018-02-27') AND d.CCC_DIVISION = 'INSTITUTIONAL EQUITY DIVISION' AND d.CCC_BANKING_TRADING = 'TRADING' AND d.PRODUCT_WEIGHT_DECOMP<>0 ), POSITIONAL AS( SELECT e.COB_DATE ,e.CCC_PL_REPORTING_REGION ,e.LE_GROUP ,e.PROCESS_ID ,e.POSITION_ID ,SUM(COALESCE(e.SLIDE_EQ_MIN_50_USD,0)) AS D50RAW ,SUM(COALESCE(e.SLIDE_EQ_MIN_30_USD,0)) AS D30RAW ,SUM(COALESCE(e.SLIDE_EQ_MIN_20_USD,0)) AS D20RAW ,SUM(COALESCE(e.SLIDE_EQ_MIN_10_USD,0)) AS D10RAW ,SUM(COALESCE(e.SLIDE_EQ_MIN_05_USD,0)) AS D5RAW ,SUM(COALESCE(e.SLIDE_EQ_MIN_02_USD,0)) AS D2RAW ,SUM(COALESCE(e.SLIDE_EQ_MIN_1_USD,0)) AS D1RAW ,SUM(COALESCE(e.SLIDE_EQ_PLS_1_USD,0)) AS P1RAW ,SUM(COALESCE(e.SLIDE_EQ_PLS_02_USD,0)) AS P2RAW ,SUM(COALESCE(e.SLIDE_EQ_PLS_05_USD,0)) AS P5RAW ,SUM(COALESCE(e.SLIDE_EQ_PLS_10_USD,0)) AS P10RAW ,SUM(COALESCE(e.SLIDE_EQ_PLS_20_USD,0)) AS P20RAW FROM cdwuser.U_EQ_MSR e WHERE e.COB_DATE IN('2018-02-28', '2018-02-27') AND e.CCC_DIVISION = 'INSTITUTIONAL EQUITY DIVISION' AND e.CCC_BANKING_TRADING = 'TRADING' GROUP BY e.COB_DATE ,e.CCC_PL_REPORTING_REGION ,e.LE_GROUP ,e.PROCESS_ID ,e.POSITION_ID ) SELECT COB_DATE ,CCC_PL_REPORTING_REGION ,LE_GROUP ,CASE WHEN Country IN ( 'AUS' ,'AUT' ,'BEL' ,'VGB' ,'BRN' ,'CAN' ,'CYM' ,'HKG' ,'COK' ,'DNK' ,'FIN' ,'FRA' ,'DEU' ,'GRC' ,'GGY' ,'VAT' ,'ISL' ,'IRL' ,'ISR' ,'ITA' ,'JPN' ,'JEY' ,'LIE' ,'LUX' ,'MCO' ,'NLD' ,'NZL' ,'NOR' ,'PRT' ,'SGP' ,'ESP' ,'SWE' ,'CHE' ,'GBR' ,'USA' ) THEN 'Developed Markets' WHEN Country IN ( 'BHR' ,'BRA' ,'CHL' ,'CHN' ,'COL' ,'CZE' ,'EGY' ,'HUN' ,'IND' ,'IDN' ,'KOR' ,'MYS' ,'MEX' ,'PER' ,'PHL' ,'POL' ,'QAT' ,'RUS' ,'TWN' ,'THA' ,'TUR' ,'ARE' ,'ZAF' ) THEN 'EM Markets' ELSE 'Frontier Markets' END AS Tier_Country_Class ,CASE WHEN Country IN ( 'ALB' ,'AND' ,'AUT' ,'BLR' ,'BEL' ,'BIH' ,'BGR' ,'CYP' ,'HRV' ,'CZE' ,'DNK' ,'EST' ,'FRO' ,'FIN' ,'FRA' ,'GEO' ,'DEU' ,'GRC' ,'GGY' ,'VAT' ,'HUN' ,'ISL' ,'IRL' ,'IMN' ,'ITA' ,'JEY' ,'LVA' ,'LIE' ,'LTU' ,'LUX' ,'MKD' ,'MLT' ,'MDA' ,'MCO' ,'MNE' ,'NLD' ,'NOR' ,'POL' ,'PRT' ,'ROU' ,'RUS' ,'SMR' ,'SRB' ,'SVK' ,'SVN' ,'ESP' ,'SJM' ,'SWE' ,'CHE' ,'UKR' ,'GBR' ) THEN 'Europe' WHEN Country IN ( 'USA' ,'CAN' ) THEN 'NAM' WHEN Country IN ( 'AIA' ,'ATG' ,'ARG' ,'ABW' ,'BHS' ,'BRB' ,'BLZ' ,'BMU' ,'BOL' ,'BRA' ,'VGB' ,'CYM' ,'CHL' ,'COL' ,'CRI' ,'CUB' ,'DMA' ,'DOM' ,'ECU' ,'SLV' ,'GUF' ,'GRL' ,'GRD' ,'GLP' ,'GTM' ,'GUY' ,'HTI' ,'HND' ,'JAM' ,'MTQ' ,'MEX' ,'MSR' ,'ANT' ,'NIC' ,'PAN' ,'PRY' ,'PER' ,'PRI' ,'KNA' ,'LCA' ,'SPM' ,'VCT' ,'SGS' ,'SUR' ,'TTO' ,'TCA' ,'URY' ,'VEN' ,'VIR' ) THEN 'LATAM' WHEN Country IN ( 'DZA' ,'AGO' ,'BEN' ,'BWA' ,'BFA' ,'BDI' ,'CMR' ,'CPV' ,'CAF' ,'TCD' ,'COM' ,'COD' ,'CIV' ,'DJI' ,'EGY' ,'GNQ' ,'ERI' ,'ETH' ,'GAB' ,'GMB' ,'GHA' ,'GIB' ,'GIN' ,'GNB' ,'KEN' ,'LSO' ,'LBR' ,'LBY' ,'MDG' ,'MWI' ,'MLI' ,'MRT' ,'MUS' ,'MYT' ,'MAR' ,'MOZ' ,'NAM' ,'NER' ,'NGA' ,'REU' ,'RWA' ,'BLM' ,'SHN' ,'MAF' ,'STP' ,'SEN' ,'SYC' ,'SLE' ,'SOM' ,'ZAF' ,'SSD' ,'SDN' ,'SWZ' ,'TZA' ,'TGO' ,'TUN' ,'UGA' ,'ESH' ,'ZMB' ,'ZWE' ) THEN 'Africa' WHEN Country IN ( 'AFG' ,'ALA' ,'ARM' ,'AZE' ,'BHR' ,'BGD' ,'BTN' ,'IOT' ,'BRN' ,'KHM' ,'CHN' ,'HKG' ,'CXR' ,'CCK' ,'FLK' ,'GUM' ,'IND' ,'IDN' ,'IRN' ,'IRQ' ,'ISR' ,'JPN' ,'JOR' ,'KAZ' ,'PRK' ,'KOR' ,'KWT' ,'KGZ' ,'LAO' ,'LBN' ,'MYS' ,'MDV' ,'MNG' ,'MMR' ,'NPL' ,'OMN' ,'PAK' ,'PSE' ,'PHL' ,'QAT' ,'SAU' ,'SGP' ,'LKA' ,'SYR' ,'TWN' ,'TJK' ,'THA' ,'TUR' ,'TKM' ,'ARE' ,'UMI' ,'UZB' ,'VNM' ,'YEM' ) THEN 'Asia' WHEN Country IN ( 'ASM' ,'ATA' ,'AUS' ,'BVT' ,'COK' ,'FJI' ,'PYF' ,'ATF' ,'HMD' ,'KIR' ,'MHL' ,'FSM' ,'NRU' ,'NCL' ,'NZL' ,'NIU' ,'NFK' ,'MNP' ,'PLW' ,'PNG' ,'PCN' ,'WSM' ,'SLB' ,'TLS' ,'TKL' ,'TON' ,'TUV' ,'VUT' ,'WLF' ) THEN 'Pacific' END AS Regional_Classification ,COUNTRY ,SUM( D50RAW + ( 10 * ( D50RAW - D30RAW ) / 20 ) ) AS D60RAW ,SUM( D50RAW + ( 9 * ( D50RAW - D30RAW ) / 20 ) ) AS D59RAW ,SUM( D50RAW + ( 8 * ( D50RAW - D30RAW ) / 20 ) ) AS D58RAW ,SUM( D50RAW + ( 7 * ( D50RAW - D30RAW ) / 20 ) ) AS D57RAW ,SUM( D50RAW + ( 6 * ( D50RAW - D30RAW ) / 20 ) ) AS D56RAW ,SUM( D50RAW + ( 5 * ( D50RAW - D30RAW ) / 20 ) ) AS D55RAW ,SUM( D50RAW + ( 4 * ( D50RAW - D30RAW ) / 20 ) ) AS D54RAW ,SUM( D50RAW + ( 3 * ( D50RAW - D30RAW ) / 20 ) ) AS D53RAW ,SUM( D50RAW + ( 2 * ( D50RAW - D30RAW ) / 20 ) ) AS D52RAW ,SUM( D50RAW + ( 1 * ( D50RAW - D30RAW ) / 20 ) ) AS D51RAW ,SUM( D50RAW ) AS D50RAW ,SUM( D30RAW + ( 19 * ( D50RAW - D30RAW ) / 20 ) ) AS D49RAW ,SUM( D30RAW + ( 18 * ( D50RAW - D30RAW ) / 20 ) ) AS D48RAW ,SUM( D30RAW + ( 17 * ( D50RAW - D30RAW ) / 20 ) ) AS D47RAW ,SUM( D30RAW + ( 16 * ( D50RAW - D30RAW ) / 20 ) ) AS D46RAW ,SUM( D30RAW + ( 15 * ( D50RAW - D30RAW ) / 20 ) ) AS D45RAW ,SUM( D30RAW + ( 14 * ( D50RAW - D30RAW ) / 20 ) ) AS D44RAW ,SUM( D30RAW + ( 13 * ( D50RAW - D30RAW ) / 20 ) ) AS D43RAW ,SUM( D30RAW + ( 12 * ( D50RAW - D30RAW ) / 20 ) ) AS D42RAW ,SUM( D30RAW + ( 11 * ( D50RAW - D30RAW ) / 20 ) ) AS D41RAW ,SUM( D30RAW + ( 10 * ( D50RAW - D30RAW ) / 20 ) ) AS D40RAW ,SUM( D30RAW + ( 9 * ( D50RAW - D30RAW ) / 20 ) ) AS D39RAW ,SUM( D30RAW + ( 8 * ( D50RAW - D30RAW ) / 20 ) ) AS D38RAW ,SUM( D30RAW + ( 7 * ( D50RAW - D30RAW ) / 20 ) ) AS D37RAW ,SUM( D30RAW + ( 6 * ( D50RAW - D30RAW ) / 20 ) ) AS D36RAW ,SUM( D30RAW + ( 5 * ( D50RAW - D30RAW ) / 20 ) ) AS D35RAW ,SUM( D30RAW + ( 4 * ( D50RAW - D30RAW ) / 20 ) ) AS D34RAW ,SUM( D30RAW + ( 3 * ( D50RAW - D30RAW ) / 20 ) ) AS D33RAW ,SUM( D30RAW + ( 2 * ( D50RAW - D30RAW ) / 20 ) ) AS D32RAW ,SUM( D30RAW + ( 1 * ( D50RAW - D30RAW ) / 20 ) ) AS D31RAW ,SUM( D30RAW ) AS D30RAW ,SUM( D20RAW + ( 9 * ( D30RAW - D20RAW ) / 10 ) ) AS D29RAW ,SUM( D20RAW + ( 8 * ( D30RAW - D20RAW ) / 10 ) ) AS D28RAW ,SUM( D20RAW + ( 7 * ( D30RAW - D20RAW ) / 10 ) ) AS D27RAW ,SUM( D20RAW + ( 6 * ( D30RAW - D20RAW ) / 10 ) ) AS D26RAW ,SUM( D20RAW + ( 5 * ( D30RAW - D20RAW ) / 10 ) ) AS D25RAW ,SUM( D20RAW + ( 4 * ( D30RAW - D20RAW ) / 10 ) ) AS D24RAW ,SUM( D20RAW + ( 3 * ( D30RAW - D20RAW ) / 10 ) ) AS D23RAW ,SUM( D20RAW + ( 2 * ( D30RAW - D20RAW ) / 10 ) ) AS D22RAW ,SUM( D20RAW + ( 1 * ( D30RAW - D20RAW ) / 10 ) ) AS D21RAW ,SUM( D20RAW ) AS D20RAW ,SUM( D10RAW + ( 9 * ( D20RAW - D10RAW ) / 10 ) ) AS D19RAW ,SUM( D10RAW + ( 8 * ( D20RAW - D10RAW ) / 10 ) ) AS D18RAW ,SUM( D10RAW + ( 7 * ( D20RAW - D10RAW ) / 10 ) ) AS D17RAW ,SUM( D10RAW + ( 6 * ( D20RAW - D10RAW ) / 10 ) ) AS D16RAW ,SUM( D10RAW + ( 5 * ( D20RAW - D10RAW ) / 10 ) ) AS D15RAW ,SUM( D10RAW + ( 4 * ( D20RAW - D10RAW ) / 10 ) ) AS D14RAW ,SUM( D10RAW + ( 3 * ( D20RAW - D10RAW ) / 10 ) ) AS D13RAW ,SUM( D10RAW + ( 2 * ( D20RAW - D10RAW ) / 10 ) ) AS D12RAW ,SUM( D10RAW + ( 1 * ( D20RAW - D10RAW ) / 10 ) ) AS D11RAW ,SUM( D10RAW ) AS D10RAW ,SUM( D5RAW + ( 4 * ( D10RAW - D5RAW ) / 5 ) ) AS D9RAW ,SUM( D5RAW + ( 3 * ( D10RAW - D5RAW ) / 5 ) ) AS D8RAW ,SUM( D5RAW + ( 2 * ( D10RAW - D5RAW ) / 5 ) ) AS D7RAW ,SUM( D5RAW + ( 1 * ( D10RAW - D5RAW ) / 5 ) ) AS D6RAW ,SUM( D5RAW ) AS D5RAW ,SUM( D2RAW + ( 2 * ( D5RAW - D2RAW ) / 3 ) ) AS D4RAW ,SUM( D2RAW + ( 1 * ( D5RAW - D2RAW ) / 3 ) ) AS D3RAW ,SUM( D2RAW ) AS D2RAW ,SUM( D1RAW ) AS D1RAW ,0 as BASE ,SUM( P1RAW ) AS P1RAW ,SUM( P2RAW ) AS P2RAW ,SUM( P2RAW + ( 1 * ( P5RAW - P2RAW ) / 3 ) ) AS P3RAW ,SUM( P2RAW + ( 2 * ( P5RAW - P2RAW ) / 3 ) ) AS P4RAW ,SUM( P5RAW ) AS P5RAW ,SUM( P5RAW + ( 1 * ( P10RAW - P5RAW ) / 5 ) ) AS P6RAW ,SUM( P5RAW + ( 2 * ( P10RAW - P5RAW ) / 5 ) ) AS P7RAW ,SUM( P5RAW + ( 3 * ( P10RAW - P5RAW ) / 5 ) ) AS P8RAW ,SUM( P5RAW + ( 4 * ( P10RAW - P5RAW ) / 5 ) ) AS P9RAW ,SUM( P10RAW ) AS P10RAW ,SUM( P10RAW + ( 1 * ( P20RAW - P10RAW ) / 10 ) ) AS P11RAW ,SUM( P10RAW + ( 2 * ( P20RAW - P10RAW ) / 10 ) ) AS P12RAW ,SUM( P10RAW + ( 3 * ( P20RAW - P10RAW ) / 10 ) ) AS P13RAW ,SUM( P10RAW + ( 4 * ( P20RAW - P10RAW ) / 10 ) ) AS P14RAW ,SUM( P10RAW + ( 5 * ( P20RAW - P10RAW ) / 10 ) ) AS P15RAW ,SUM( P10RAW + ( 6 * ( P20RAW - P10RAW ) / 10 ) ) AS P16RAW ,SUM( P10RAW + ( 7 * ( P20RAW - P10RAW ) / 10 ) ) AS P17RAW ,SUM( P10RAW + ( 8 * ( P20RAW - P10RAW ) / 10 ) ) AS P18RAW ,SUM( P10RAW + ( 9 * ( P20RAW - P10RAW ) / 10 ) ) AS P19RAW ,SUM( P20RAW ) AS P20RAW FROM ( SELECT d.COB_DATE ,d.COUNTRY ,d.CCC_PL_REPORTING_REGION ,d.LE_GROUP ,SUM(e.D50RAW * d.WEIGHT) AS D50RAW ,SUM(e.D30RAW* d.WEIGHT) AS D30RAW ,SUM(e.D20RAW * d.WEIGHT) AS D20RAW ,SUM(e.D10RAW * d.WEIGHT) AS D10RAW ,SUM(e.D5RAW * d.WEIGHT) AS D5RAW ,SUM(e.D2RAW * d.WEIGHT) AS D2RAW ,SUM(e.D1RAW * d.WEIGHT) AS D1RAW ,SUM(e.P1RAW* d.WEIGHT) AS P1RAW ,SUM(e.P2RAW * d.WEIGHT) AS P2RAW ,SUM(e.P5RAW * d.WEIGHT) AS P5RAW ,SUM(e.P10RAW* d.WEIGHT) AS P10RAW ,SUM(e.P20RAW* d.WEIGHT) AS P20RAW FROM Decomp d INNER JOIN Positional e ON e.PROCESS_ID = d.PROCESS_ID AND e.POSITION_ID = d.POSITION_ID AND e.COB_DATE = d.COB_DATE AND e.CCC_PL_REPORTING_REGION=d.CCC_PL_REPORTING_REGION AND e.LE_GROUP=d.LE_GROUP GROUP BY d.COB_DATE ,d.COUNTRY ,d.CCC_PL_REPORTING_REGION ,d.LE_GROUP ) X GROUP BY Country ,COB_DATE ,CCC_PL_REPORTING_REGION ,LE_GROUP ,CASE WHEN Country IN ( 'AUS' ,'AUT' ,'BEL' ,'VGB' ,'BRN' ,'CAN' ,'CYM' ,'HKG' ,'COK' ,'DNK' ,'FIN' ,'FRA' ,'DEU' ,'GRC' ,'GGY' ,'VAT' ,'ISL' ,'IRL' ,'ISR' ,'ITA' ,'JPN' ,'JEY' ,'LIE' ,'LUX' ,'MCO' ,'NLD' ,'NZL' ,'NOR' ,'PRT' ,'SGP' ,'ESP' ,'SWE' ,'CHE' ,'GBR' ,'USA' ) THEN 'Developed Markets' WHEN Country IN ( 'BHR' ,'BRA' ,'CHL' ,'CHN' ,'COL' ,'CZE' ,'EGY' ,'HUN' ,'IND' ,'IDN' ,'KOR' ,'MYS' ,'MEX' ,'PER' ,'PHL' ,'POL' ,'QAT' ,'RUS' ,'TWN' ,'THA' ,'TUR' ,'ARE' ,'ZAF' ) THEN 'EM Markets' ELSE 'Frontier Markets' END ,CASE WHEN Country IN ( 'ALB' ,'AND' ,'AUT' ,'BLR' ,'BEL' ,'BIH' ,'BGR' ,'CYP' ,'HRV' ,'CZE' ,'DNK' ,'EST' ,'FRO' ,'FIN' ,'FRA' ,'GEO' ,'DEU' ,'GRC' ,'GGY' ,'VAT' ,'HUN' ,'ISL' ,'IRL' ,'IMN' ,'ITA' ,'JEY' ,'LVA' ,'LIE' ,'LTU' ,'LUX' ,'MKD' ,'MLT' ,'MDA' ,'MCO' ,'MNE' ,'NLD' ,'NOR' ,'POL' ,'PRT' ,'ROU' ,'RUS' ,'SMR' ,'SRB' ,'SVK' ,'SVN' ,'ESP' ,'SJM' ,'SWE' ,'CHE' ,'UKR' ,'GBR' ) THEN 'Europe' WHEN Country IN ( 'USA' ,'CAN' ) THEN 'NAM' WHEN Country IN ( 'AIA' ,'ATG' ,'ARG' ,'ABW' ,'BHS' ,'BRB' ,'BLZ' ,'BMU' ,'BOL' ,'BRA' ,'VGB' ,'CYM' ,'CHL' ,'COL' ,'CRI' ,'CUB' ,'DMA' ,'DOM' ,'ECU' ,'SLV' ,'GUF' ,'GRL' ,'GRD' ,'GLP' ,'GTM' ,'GUY' ,'HTI' ,'HND' ,'JAM' ,'MTQ' ,'MEX' ,'MSR' ,'ANT' ,'NIC' ,'PAN' ,'PRY' ,'PER' ,'PRI' ,'KNA' ,'LCA' ,'SPM' ,'VCT' ,'SGS' ,'SUR' ,'TTO' ,'TCA' ,'URY' ,'VEN' ,'VIR' ) THEN 'LATAM' WHEN Country IN ( 'DZA' ,'AGO' ,'BEN' ,'BWA' ,'BFA' ,'BDI' ,'CMR' ,'CPV' ,'CAF' ,'TCD' ,'COM' ,'COD' ,'CIV' ,'DJI' ,'EGY' ,'GNQ' ,'ERI' ,'ETH' ,'GAB' ,'GMB' ,'GHA' ,'GIB' ,'GIN' ,'GNB' ,'KEN' ,'LSO' ,'LBR' ,'LBY' ,'MDG' ,'MWI' ,'MLI' ,'MRT' ,'MUS' ,'MYT' ,'MAR' ,'MOZ' ,'NAM' ,'NER' ,'NGA' ,'REU' ,'RWA' ,'BLM' ,'SHN' ,'MAF' ,'STP' ,'SEN' ,'SYC' ,'SLE' ,'SOM' ,'ZAF' ,'SSD' ,'SDN' ,'SWZ' ,'TZA' ,'TGO' ,'TUN' ,'UGA' ,'ESH' ,'ZMB' ,'ZWE' ) THEN 'Africa' WHEN Country IN ( 'AFG' ,'ALA' ,'ARM' ,'AZE' ,'BHR' ,'BGD' ,'BTN' ,'IOT' ,'BRN' ,'KHM' ,'CHN' ,'HKG' ,'CXR' ,'CCK' ,'FLK' ,'GUM' ,'IND' ,'IDN' ,'IRN' ,'IRQ' ,'ISR' ,'JPN' ,'JOR' ,'KAZ' ,'PRK' ,'KOR' ,'KWT' ,'KGZ' ,'LAO' ,'LBN' ,'MYS' ,'MDV' ,'MNG' ,'MMR' ,'NPL' ,'OMN' ,'PAK' ,'PSE' ,'PHL' ,'QAT' ,'SAU' ,'SGP' ,'LKA' ,'SYR' ,'TWN' ,'TJK' ,'THA' ,'TUR' ,'TKM' ,'ARE' ,'UMI' ,'UZB' ,'VNM' ,'YEM' ) THEN 'Asia' WHEN Country IN ( 'ASM' ,'ATA' ,'AUS' ,'BVT' ,'COK' ,'FJI' ,'PYF' ,'ATF' ,'HMD' ,'KIR' ,'MHL' ,'FSM' ,'NRU' ,'NCL' ,'NZL' ,'NIU' ,'NFK' ,'MNP' ,'PLW' ,'PNG' ,'PCN' ,'WSM' ,'SLB' ,'TLS' ,'TKL' ,'TON' ,'TUV' ,'VUT' ,'WLF' ) THEN 'Pacific' END